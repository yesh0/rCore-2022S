var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems","t":[3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11],"n":["CriticalSection","Mutex","Nr","Peripheral","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","get","into","into","into","new","new","new","nr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["bare_metal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Critical section token","A “mutex” based on critical sections","Interrupt number","A peripheral","","Borrows the data for the duration of the critical section","","","Borrows the peripheral for the duration of a critical …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a pointer to the register block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a critical section token","Creates a new mutex","Creates a new peripheral","Returns the number associated with an interrupt","","","","","","","","",""],"i":[0,0,0,0,1,2,2,3,3,1,2,3,3,1,2,3,3,1,2,3,1,2,3,4,1,2,3,1,2,3,1,2,3],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0],["criticalsection",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["criticalsection",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]]],[[["",0]],["u8",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"CriticalSection"],[3,"Mutex"],[3,"Peripheral"],[8,"Nr"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[1,0,0,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[["",0]],["usize",0]],[[["",0],["usize",0]],["bool",0]],[[["",0],["usize",0]],["bool",0]],[[["",0],["rangebounds",8,[["usize",0]]]]],[[["",0],["rangebounds",8,[["usize",0]]]]],[[["",0],["usize",0],["bool",0]],["",0]],[[["",0],["usize",0],["bool",0]]],[[["",0],["rangebounds",8,[["usize",0]]]],["",0]],[[["",0],["rangebounds",8,[["usize",0]]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[null],"p":[]},\
"buddy_system_allocator":{"doc":"","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FrameAllocator","Heap","LockedFrameAllocator","LockedHeap","LockedHeapWithRescue","add_frame","add_to_heap","alloc","alloc","alloc","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dealloc","dealloc","dealloc","dealloc","deref","deref","deref","empty","empty","fmt","from","from","from","from","from","init","insert","into","into","into","into","into","linked_list","new","new","new","new","new","stats_alloc_actual","stats_alloc_user","stats_total_bytes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Iter","IterMut","LinkedList","ListNode","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","new","next","next","pop","pop","push","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value"],"q":["buddy_system_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buddy_system_allocator::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A frame allocator that uses buddy system, requiring a …","A heap that uses buddy system","A locked version of <code>FrameAllocator</code>","A locked version of <code>Heap</code>","A locked version of <code>Heap</code> with rescue before oom","Add a range of frame number [start, end) to the allocator","Add a range of memory [start, end) to the heap","Alloc a range of frames from the allocator, return the …","Alloc a range of memory from the heap satifying <code>layout</code> …","","","","","","","","","","","","","Dealloc a range of frames [frame, frame+count) from the …","Dealloc a range of memory from the heap","","","","","","Create an empty heap","Creates an empty heap","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Add a range of memory [start, end) to the heap","Add a range of frame to the allocator","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Provide the intrusive LinkedList","Create an empty frame allocator","Creates an empty heap","Create an empty heap","Creates an empty heap","Creates an empty heap","Return the number of bytes that are actually allocated","Return the number of bytes that user requests","Return the total number of bytes in the heap","","","","","","","","","","","","","","","","An iterator over the linked list","A mutable iterator over the linked list","An intrusive linked list","Represent a mutable node in <code>LinkedList</code>","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return <code>true</code> if the list is empty","Return an iterator over the items in the list","Return an mutable iterator over the items in the list","Create a new LinkedList","","","Remove the node from the list","Try to remove the first item in the list","Push <code>item</code> to the front of the list","","","","","","","","","","","","","","Returns the pointed address"],"i":[0,0,0,0,0,1,2,1,2,3,4,1,5,2,3,4,1,5,2,3,4,1,2,3,4,5,3,4,2,3,2,1,5,2,3,4,2,1,1,5,2,3,4,0,1,5,2,3,4,2,2,2,1,5,2,3,4,1,5,2,3,4,1,5,2,3,4,0,0,0,0,6,7,8,9,6,7,8,9,9,9,9,6,7,8,9,6,7,8,9,6,8,9,9,9,9,6,8,7,9,9,9,6,7,8,9,6,7,8,9,6,7,8,9,7],"f":[null,null,null,null,null,[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0],["usize",0]]],[[["",0],["usize",0]],["option",4,[["usize",0]]]],[[["",0],["layout",3]],["result",4,[["nonnull",3,[["u8",0]]]]]],[[["",0],["layout",3]]],[[["",0],["layout",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["usize",0],["usize",0]]],[[["",0],["nonnull",3,[["u8",0]]],["layout",3]]],[[["",0],["layout",3]]],[[["",0],["layout",3]]],[[["",0]],["mutex",3]],[[["",0]],["mutex",3]],[[["",0]],["mutex",3]],[[]],[[],["lockedheap",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0],["usize",0],["usize",0]]],[[["",0],["range",3,[["usize",0]]]]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["lockedframeallocator",3]],[[]],[[],["lockedheap",3]],[[],["lockedheapwithrescue",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["linkedlist",3]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["iter",3]],[[["",0]],["itermut",3]],[[],["linkedlist",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]]],"p":[[3,"FrameAllocator"],[3,"Heap"],[3,"LockedHeap"],[3,"LockedHeapWithRescue"],[3,"LockedFrameAllocator"],[3,"Iter"],[3,"ListNode"],[3,"IterMut"],[3,"LinkedList"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[null],"p":[]},\
"easy_fs":{"doc":"","t":[17,8,3,3,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10],"n":["BLOCK_SZ","BlockDevice","EasyFileSystem","Inode","alloc_data","alloc_inode","block_device","borrow","borrow","borrow_mut","borrow_mut","clear","create","create","data_bitmap","dealloc_data","find","from","from","get_data_block_id","get_disk_inode_pos","inode_bitmap","into","into","ls","new","open","read_at","read_block","root_inode","try_from","try_from","try_into","try_into","type_id","type_id","write_at","write_block"],"q":["easy_fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Use a block size of 512 bytes","Trait for block devices which reads and writes data in the …","An easy fs over a block device","Virtual filesystem layer over easy-fs","Allocate a data block","Allocate a new inode","","","","","","Clear the data in current inode","Create a filesystem from a block device","Create inode under current inode by name","","Deallocate a data block","Find inode under current inode by name","Returns the argument unchanged.","Returns the argument unchanged.","Get data block by id","Get inode by id","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","List inodes under current inode","Create a vfs inode","Open a block device as a filesystem","Read data from current inode","","Get the root inode of the filesystem","","","","","","","Write data to current inode",""],"i":[0,0,0,0,1,1,1,1,2,1,2,2,1,2,1,1,2,1,2,1,1,1,1,2,2,2,1,2,3,1,1,2,1,2,1,2,2,3],"f":[null,null,null,null,[[["",0]],["u32",0]],[[["",0]],["u32",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["arc",3,[["blockdevice",8]]],["u32",0],["u32",0]],["arc",3,[["mutex",3]]]],[[["",0],["str",0]],["option",4,[["arc",3,[["inode",3]]]]]],null,[[["",0],["u32",0]]],[[["",0],["str",0]],["option",4,[["arc",3,[["inode",3]]]]]],[[]],[[]],[[["",0],["u32",0]],["u32",0]],[[["",0],["u32",0]]],null,[[]],[[]],[[["",0]],["vec",3,[["string",3]]]],[[["u32",0],["usize",0],["arc",3,[["mutex",3,[["easyfilesystem",3]]]]],["arc",3,[["blockdevice",8]]]]],[[["arc",3,[["blockdevice",8]]]],["arc",3,[["mutex",3]]]],[[["",0],["usize",0]],["usize",0]],[[["",0],["usize",0]]],[[["arc",3]],["inode",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["usize",0]],["usize",0]],[[["",0],["usize",0]]]],"p":[[3,"EasyFileSystem"],[3,"Inode"],[8,"BlockDevice"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[null,[[["",0]]],null],"p":[]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value for an unlocked mutex.","Initial value.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[1,2,0,3,4,0,0,3,3,5,5,6,4,4,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,21,21,10,6,13,16,17,18,22,22,22,22,23,23,9,12,15,9,12,15,9,12,15,10,11,13,14,16,17,18,19,20,10,11,17,20,24,17,18,25,17,25,10,11,13,14,16,17,18,19,20,9,10,10,11,11,12,13,13,14,14,15,16,16,17,17,18,18,19,19,20,20,9,12,9,12,15,15,15,15,7,8,9,9,9,10,11,6,12,12,12,13,14,15,15,15,16,17,18,19,20,9,12,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,9,12,15,3,3,9,6,12,4,4,15,4,4,15,6,12,3,9,6,12,4,4,26,27,10,11,13,14,16,17,19,20,10,9,12,15,5,9,12,15,15,15,13,16,17,18,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,9,6,12,4,2,2,1,9,6,12,4,2,26,28,28,2,1,9,6,12,27,29,29,10,11,13,14,16,17,19,20,15,15,15,15,15,15,15,15,15,27,18,29,18,29,18,15,15,15,7,8,9,10,11,6,12,13,14,15,16,17,18,19,20,3,6,4,22,21,10,11,6,13,14,16,17,18,19,20,4,22,27,23,10,13,16,17,18,10,13,16,17,18,15,27,18,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[["",0]]],[[],["rwlockupgradablereadguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[["never",0]]],[[],["mutex",3]],[[]],[[]],[[]],[[["never",0]]],[[]],[[],["reentrantmutex",3]],[[]],[[]],[[],["rwlock",3]],[[["never",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["mutexguard",3]],[[["",0]]],[[["",0]],["reentrantmutexguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["mappedmutexguard",3,[["sized",8]]]],[[],["mappedmutexguard",3,[["sized",8]]]],[[],["mappedreentrantmutexguard",3,[["sized",8]]]],[[],["mappedreentrantmutexguard",3,[["sized",8]]]],[[],["mappedrwlockreadguard",3,[["sized",8]]]],[[],["mappedrwlockwriteguard",3,[["sized",8]]]],[[],["mappedrwlockreadguard",3,[["sized",8]]]],[[],["mappedrwlockwriteguard",3,[["sized",8]]]],[[["",0]],["mutex",3]],[[],["mutex",3]],[[],["reentrantmutex",3]],[[],["rwlock",3]],[[["",0]],["nonzerousize",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["reentrantmutex",3]],[[["",0]],["rwlock",3]],[[["",0]],["rwlock",3]],[[["",0]],["rwlock",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["reentrantmutexguard",3]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4,[["mappedmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedreentrantmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedreentrantmutexguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockreadguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockwriteguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockreadguard",3,[["sized",8]]]]]],[[],["result",4,[["mappedrwlockwriteguard",3,[["sized",8]]]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["option",4,[["rwlockupgradablereadguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["bool",0]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["rwlockupgradablereadguard",3]],[[["",0]]],[[],["rwlockwriteguard",3]],[[["",0]],["rwlockwriteguard",3]]],"p":[[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawMutex"],[8,"RawRwLock"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"GuardSend"],[3,"GuardNoSend"],[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutexFair"],[8,"RawRwLockFair"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockRecursive"],[8,"RawRwLockUpgrade"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","ne","ne","ne","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","","","","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[1,2,1,2,1,2,0,0,0,0,0,2,0,0,0,0,0,1,2,1,2,3,4,1,2,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,6,3,5,1,2,3,5,1,2,5,6,0,9,1,1,2,2,5,6,8,0,3,4,3,4,9,1,1,2,2,3,4,5,6,7,7,8,8,1,2,3,4,5,6,7,8,1,2,1,1,2,2,1,1,2,2,1,2,5,6,0,1,2,3,4,5,6,7,8,1,2,1,1,2,2,3,4,5,6,3,4,9,0,0,0,1,1,2,2,1,2,0,3,4,3,4,3,4,5,6,8,4,6,1,1,2,2,5,6,0,0,0,3,4,5,6,2,1,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["arguments",3]],[[["",0],["arguments",3]],["recordbuilder",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["record",3]],[[["",0]],["metadata",3]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["",0]],["level",4]],[[["",0]],["levelfilter",4]],[[["",0]],["record",3]],[[["",0]],["metadata",3]],[[["",0],["level",4]],["ordering",4]],[[["",0],["levelfilter",4]],["ordering",4]],[[["",0],["metadata",3]],["ordering",4]],[[["",0],["metadatabuilder",3]],["ordering",4]],null,[[["",0],["metadata",3]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["metadata",3]],["bool",0]],[[["",0],["metadatabuilder",3]],["bool",0]],[[["",0],["parselevelerror",3]],["bool",0]],null,[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["level",4]]]],[[["str",0]],["result",4,[["levelfilter",4]]]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[["",0]],["level",4]],[[["",0],["level",4]],["recordbuilder",3]],[[["",0]],["level",4]],[[["",0],["level",4]],["metadatabuilder",3]],[[["",0]],["option",4,[["u32",0]]]],[[["",0],["option",4,[["u32",0]]]],["recordbuilder",3]],[[["",0],["record",3]]],null,null,[[],["log",8]],[[["",0],["level",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["levelfilter",4]],["bool",0]],[[["",0],["level",4]],["bool",0]],[[],["level",4]],[[],["levelfilter",4]],[[],["levelfilter",4]],[[["",0]],["metadata",3]],[[["",0],["metadata",3]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0]],["option",4,[["str",0]]]],[[["",0],["option",4,[["str",0]]]],["recordbuilder",3]],[[["",0],["metadata",3]],["bool",0]],[[["",0],["metadatabuilder",3]],["bool",0]],[[["",0],["parselevelerror",3]],["bool",0]],[[],["recordbuilder",3]],[[],["metadatabuilder",3]],[[["",0],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["",0],["level",4]],["option",4,[["ordering",4]]]],[[["",0],["levelfilter",4]],["option",4,[["ordering",4]]]],[[["",0],["level",4]],["option",4,[["ordering",4]]]],[[["",0],["metadata",3]],["option",4,[["ordering",4]]]],[[["",0],["metadatabuilder",3]],["option",4,[["ordering",4]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["log",8]],["result",4,[["setloggererror",3]]]],[[["levelfilter",4]]],[[["",0]],["str",0]],[[["",0],["str",0]],["recordbuilder",3]],[[["",0]],["str",0]],[[["",0],["str",0]],["metadatabuilder",3]],[[["",0]],["option",4,[["level",4]]]],[[["",0]],["levelfilter",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"],[8,"Log"]]},\
"os":{"doc":"The main module and entrypoint","t":[5,14,0,0,0,0,0,0,0,14,14,14,14,5,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,0,3,6,12,5,11,11,11,11,11,11,11,11,0,12,3,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,18,18,8,18,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,12,11,12,11,12,11,10,10,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,10,18,3,3,3,18,18,3,18,18,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,5,11,11,11,12,5,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,5,11,11,11,11,11,0,0,0,5,0,0,12,12,12,12,3,3,3,3,8,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,6,3,3,12,10,11,11,11,11,11,11,11,12,10,11,11,11,12,11,5,5,5,11,11,11,11,5,11,11,11,10,11,11,12,12,11,11,11,11,11,11,11,11,11,7,7,5,5,5,13,13,3,3,3,4,3,18,18,18,18,12,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,5,5,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,12,11,11,11,11,11,12,11,11,11,5,11,11,5,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,18,3,3,3,18,18,3,3,18,18,18,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,5,5,5,5,5,0,3,11,11,11,11,12,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,5,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,5,5,5,5,12,12,11,11,11,11,11,11,11,12,3,12,5,11,11,0,11,5,11,11,0,0,0,5,0,0,11,11,11,3,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,3,3,12,11,5,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,3,3,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,12,5,5,5,11,11,11,11,12,11,11,11,5,5,11,5,11,11,11,11,11,11,5,13,13,3,3,4,13,13,11,12,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,17,17,5,5,5,0,5,5,5,5,5,5,5,3,11,11,11,11,11,12,12,12,11,12,12,11,11,11,12],"n":["clear_bss","colorize","config","console","drivers","fs","lang_items","logging","mm","print","print_colorized","println","println_colorized","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MAX_SYSCALL_NUM","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","ANSICON","BgBlack","BgBlue","BgCyan","BgDefault","BgGreen","BgLightBlue","BgLightCyan","BgLightGray","BgLightGreen","BgLightMagenta","BgLightRed","BgLightWhite","BgLightYellow","BgMagenta","BgRed","BgWhite","BgYellow","Blink","Bold","FgBlack","FgBlue","FgCyan","FgDefault","FgGreen","FgLightBlue","FgLightCyan","FgLightGray","FgLightGreen","FgLightMagenta","FgLightRed","FgLightWhite","FgLightYellow","FgMagenta","FgRed","FgWhite","FgYellow","Reset","Reverse","Stdout","Underline","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","print","print_colorized","try_from","try_from","try_into","try_into","type_id","type_id","write_str","block","BLOCK_DEVICE","BlockDeviceImpl","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","0","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","__private_field","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","into","into","new","read_block","try_from","try_from","try_into","try_into","type_id","type_id","virtio_dma_alloc","virtio_dma_dealloc","virtio_phys_to_virt","virtio_virt_to_phys","write_block","DIR","FILE","File","NULL","Stat","StatMode","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","dev","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","ino","inode","insert","intersection","intersects","into","into","is_all","is_empty","mode","ne","nlink","not","pad","partial_cmp","read","readable","remove","set","stdio","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","ne","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","address","frame_allocator","heap_allocator","init","memory_set","page_table","0","0","0","0","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VPNRange","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","ne","ne","ne","ne","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","dealloc","dealloc","deref","drop","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","ne","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","ne","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_getchar","console_putchar","sbi_call","set_timer","shutdown","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_FSTAT","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_LINKAT","SYSCALL_MMAP","SYSCALL_MUNMAP","SYSCALL_OPEN","SYSCALL_READ","SYSCALL_SET_PRIORITY","SYSCALL_SPAWN","SYSCALL_TASK_INFO","SYSCALL_UNLINKAT","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_fstat","sys_linkat","sys_open","sys_read","sys_unlinkat","sys_write","TaskInfo","TimeVal","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","into","into","sec","status","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_mmap","sys_munmap","sys_set_priority","sys_spawn","sys_task_info","sys_waitpid","sys_yield","syscall_times","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","usec","INITPROC","__private_field","add_initproc","borrow","borrow_mut","context","deref","exit_current_and_run_next","from","into","manager","pid","processor","suspend_current_and_run_next","switch","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","clone","clone_into","from","goto_trap_return","into","ra","s","sp","to_owned","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","0","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","drop","drop","from","from","from","from","get_top","into","into","into","into","kernel_stack_position","new","new","pid","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","get_status","get_trap_cx","get_user_token","getpid","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MICRO_PER_SEC","TICKS_PER_SEC","get_time","get_time_us","set_next_trigger","context","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":["os","","","","","","","","","","","","","","","","","","","","os::config","","","","","","","","","","","os::console","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::drivers","os::drivers::block","","","","","","","","","","","","","os::drivers::block::virtio_blk","","","","","","","","","","","","","","","","","","","","","","","","","","","os::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::fs::inode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::fs::stdio","","","","","","","","","","","","","","","","","","","","","","","","os::lang_items","os::logging","","","","","","","","","","","","os::mm","","","","","","os::mm::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::mm::frame_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::mm::heap_allocator","","","","","os::mm::memory_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::mm::page_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::sbi","","","","","","","","","os::sync","os::sync::up","","","","","","","","","","","os::syscall","","","","","","","","","","","","","","","","","","","","","","os::syscall::fs","","","","","","","os::syscall::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::task","","","","","","","","","","","","","","","","","","","os::task::context","","","","","","","","","","","","","","","","os::task::manager","","","","","","","","","","","","","","","","","","","","","","","","os::task::pid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::task::processor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::task::switch","os::task::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","os::timer","","","","","os::trap","","","","","","","","os::trap::context","","","","","","","","","","","","","","",""],"d":["clear BSS segment","","Constants used in rCore","SBI console driver, for text output","","","The panic handler","Global logger","Memory management implementation","print string macro","","println string macro","","the rust entry-point of os","SBI call wrappers","Synchronization and interior mutability primitives","Implementation of syscalls","Implementation of process management mechanism","RISC-V timer-related functionality","Trap handling functionality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","directory","ordinary regular file","The common abstraction of all IO resources","","The stat of a inode","The mode of a inode whether a directory or a file","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","ID of device containing file","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","inode number","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","file type and mode","","number of hard links","Returns the complement of this set of flags.","unused pad","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","A wrapper around a filesystem inode to implement File …","The OS inode inner in ‘UPSafeCell’","Flags for opening files","","","The root of all inodes, or ‘/’ in short","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","List all files in the filesystems","","Construct an OS inode from a inode","Returns the complement of this set of flags.","","Open a file by path","","","Read all data inside a inode into vector","Get the current read write permission on an inode does not …","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","The standard input","The standard output","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","panic handler","a simple logger","","","","","Returns the argument unchanged.","initiate logger","Calls <code>U::from(self)</code>.","","","","","Implementation of physical and virtual address and page …","Implementation of <code>FrameAllocator</code> which controls all the …","The global allocator","initiate heap allocator, frame allocator and kernel space","Implementation of <code>MapArea</code> and <code>MemorySet</code>.","Implementation of <code>PageTableEntry</code> and <code>PageTable</code>.","","","","","Definitions","","a simple range structure for type T","iterator for the simple range structure","","a simple range structure for virtual page number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","frame allocator instance through lazy_static!","","","manage a frame which has the same lifecycle as the tracker","an implementation for frame allocator","","","","","","","","","","","","","","","","","initiate the frame allocator using <code>ekernel</code> and <code>MEMORY_END</code>","a simple test for frame allocator","deallocate a frame","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","heap allocator instance","heap space ([u8; KERNEL_HEAP_SIZE])","panic when heap allocation error occurs","","initiate heap allocator","","","a memory set instance through lazy_static! managing kernel …","map area structure, controls a contiguous piece of virtual …","map permission corresponding to that in pte: <code>R W X U</code>","map type for memory set: identical or framed","memory set structure, controls virtual-memory space","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","data: start-aligned but maybe with shorter length assume …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Include sections in elf and trampoline and TrapContext and …","Copy an identical user_space","","","Inserts the specified flags in-place.","Assume that no conflicts.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Get the token of the kernel memory space","","","","Mention that trampoline is not collected by areas.","","","","","Without kernel stacks.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","page table entry flags","page table structure","page table entry structure","","","An abstraction over a buffer passed from user space to …","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Temporarily used to get arguments from user space.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Get the length of a UserBuffer","","","","Constuct a UserBuffer","","","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","translate a pointer to a mutable u8 Vec through page table","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","use sbi call to getchar from console (qemu uart handler)","use sbi call to putchar in console (qemu uart handler)","general sbi call","use sbi call to set timer","use sbi call to shutdown the kernel","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Panic if the data has been borrowed.","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","","","","","","","","","","","","","","","","","","","","File and filesystem-related syscalls","Process management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Syscall Exec which accepts the elf path","","Syscall Fork which returns 0 for child process and …","","","","","","","","If there is not a child process whose pid is same as …","current task gives up resources for other tasks","","","","","","","","","","","Creation of initial process","","","","","Implementation of <code>TaskContext</code>","","Exit current task, recycle process resources and switch to …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Implementation of <code>TaskManager</code>","Task pid implementation.","Implementation of <code>Processor</code> and Intersection of control …","Make current task suspended and switch to the next task","Rust wrapper around <code>__switch</code>.","Types related to task management &amp; Functions for …","","","","task context structure containing some registers","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Ret position after task switching","s0-11 register, callee saved","Stack pointer","","","","","","TASK_MANAGER instance through lazy_static!","","","Add process back to ready queue","","","","","","","Take a process out of the ready queue","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","KernelStack corresponding to PID","Pid allocator instance through lazy_static!","Process identifier allocator using stack allocation","Abstract structure of PID","","","","","","","","","","","A new PID to be assigned","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return (bottom, top) of a kernel stack in kernel space.","","","","","Push a variable of type T into the top of the KernelStack …","Recycled PID sequence","","","","","","","","","","","","","PROCESSOR instance through lazy_static!","Processor management structure","","","","","","","The task currently executing on the current processor","Get a copy of the current task","Get the mutable reference to trap context of current task","Get token of the address space of current task","","Returns the argument unchanged.","Returns the argument unchanged.","","The basic control flow of each core, helping to select and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The main part of process execution and scheduling","Return to idle control flow for new scheduling","","Get current task through take, leaving a None in its place","","","","","","","Switch to the context of <code>next_task_cx_ptr</code>, saving the …","","","Task control block structure","Structure containing more process content","task status: UnInit, Ready, Running, Exited","","","","Application data can only appear in areas where the …","","","","","","","A vector containing TCBs of all child processes of the …","","","","Load a new elf to replace the original application address …","It is set when active exit or execution error occurs","","Fork from parent to child","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get the mutex to get the RefMut TaskControlBlockInner","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Kernel stack corresponding to PID","Application address space","Create a new process","Parent process of the current process. Weak will not …","Process identifier","Save task context","Maintain the execution status of the current process","","The physical page number of the frame where the trap …","","","","","","","","","","","","read the <code>mtime</code> register","get current time in microseconds","set the next timer interrupt","Implementation of <code>TrapContext</code>","","","","","","","","trap context structure containing sstatus, sepc and …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Token of kernel address space","Kernel stack pointer of the current application","sepc","","sstatus","Virtual address of trap handler entry point in kernel","","","","General-Purpose Register x0-31"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,2,1,2,1,2,1,2,1,0,0,2,1,2,1,2,1,2,0,0,0,3,0,3,3,3,3,3,3,3,3,0,4,0,0,0,5,4,5,4,5,5,4,5,4,5,4,4,4,5,4,5,4,5,0,0,0,0,4,6,6,0,6,0,0,6,6,6,6,6,6,6,6,6,7,6,7,6,6,6,6,6,6,7,6,6,6,6,7,6,6,6,6,6,7,6,6,6,6,6,6,7,0,6,6,6,7,6,6,6,7,6,7,6,7,6,8,8,6,6,0,6,6,6,6,6,7,6,7,6,7,6,6,8,8,9,0,0,0,9,9,0,9,9,10,9,9,9,9,9,9,9,9,9,11,12,10,9,11,12,10,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,11,12,10,9,9,9,9,9,9,11,12,9,9,9,11,12,10,9,9,9,0,9,11,9,12,0,9,11,11,9,11,11,9,9,9,9,9,9,9,11,12,10,9,11,12,10,9,11,12,10,9,9,11,11,11,0,0,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,0,0,15,15,15,15,15,0,15,15,15,15,15,0,0,0,0,0,0,16,17,18,19,0,0,0,0,0,0,0,0,16,17,20,16,17,18,19,21,20,16,17,18,19,21,16,17,16,17,18,19,21,16,17,18,19,21,16,17,18,19,20,20,16,17,18,19,16,17,16,17,18,19,20,16,16,16,17,17,17,18,18,18,19,19,19,21,18,21,16,18,18,16,21,19,20,16,17,18,19,21,20,21,21,16,17,18,19,20,21,20,16,17,16,17,18,19,21,22,18,19,16,17,18,19,21,20,16,17,18,19,21,20,16,17,18,19,21,20,16,17,18,19,21,0,0,0,0,0,23,24,25,26,25,23,26,25,23,25,24,25,23,26,25,26,0,0,0,26,25,23,25,0,26,25,23,24,26,25,26,25,26,25,23,26,25,23,26,25,23,0,0,0,0,0,27,27,0,0,0,0,0,28,28,28,28,29,30,28,30,28,28,28,28,28,28,28,28,30,31,29,27,28,30,31,29,27,28,27,28,27,28,28,28,28,31,31,29,28,0,0,0,28,27,28,0,0,28,27,28,28,28,28,28,30,31,29,27,28,31,28,28,28,30,30,28,28,28,30,28,28,30,31,29,27,28,28,28,0,31,31,31,30,31,28,31,30,30,28,30,28,30,30,0,28,30,0,0,28,0,0,0,28,28,28,27,28,28,30,30,30,31,29,27,28,30,31,29,27,28,30,31,29,27,28,28,31,31,31,32,32,32,0,0,0,32,32,0,0,32,32,32,32,32,32,32,32,32,32,33,32,32,34,35,36,32,33,34,35,36,32,33,35,36,32,33,32,33,32,32,32,36,36,32,32,33,32,33,32,34,34,33,32,32,32,32,32,34,34,35,36,32,33,32,32,32,32,34,32,32,32,32,34,35,36,32,33,35,36,32,32,33,35,34,32,34,35,33,36,32,32,33,33,32,34,32,32,32,32,32,33,32,34,34,34,0,0,0,0,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,32,34,33,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,38,39,39,39,38,38,39,38,39,38,39,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,38,39,38,39,38,39,38,0,40,0,40,40,0,40,0,40,40,0,0,0,0,0,0,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,42,43,0,43,42,43,42,42,43,0,43,42,43,42,43,43,43,42,43,42,43,42,44,0,0,0,0,45,46,46,44,47,45,46,44,47,45,46,46,45,44,47,46,44,47,45,47,46,44,47,45,0,46,47,47,0,47,46,46,44,47,45,46,44,47,45,46,44,47,45,0,0,48,49,48,49,48,49,49,0,0,0,48,49,48,49,49,49,48,49,0,0,49,0,49,48,49,48,49,48,0,50,50,0,0,0,50,50,51,51,52,51,50,52,51,50,51,50,50,50,52,51,51,52,52,51,50,51,51,51,52,52,52,52,51,50,51,52,51,52,51,52,51,51,50,51,52,51,50,52,51,50,52,51,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["never",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["arguments",3]]],[[["arguments",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["str",0]],["result",6]],null,null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["arc",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["upsafecell",3]],[[]],[[]],[[]],[[]],[[]],[[["",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]],["physaddr",3]],[[["physaddr",3],["usize",0]],["i32",0]],[[["physaddr",3]],["virtaddr",3]],[[["virtaddr",3]],["physaddr",3]],[[["",0],["usize",0]]],null,null,null,null,null,null,[[]],[[]],[[["",0]]],[[["statmode",3]]],[[["",0]]],[[["",0]],["u32",0]],null,[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["statmode",3]],[[["",0],["",0]]],[[["",0],["statmode",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],null,[[]],[[]],[[["",0],["statmode",3]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["u32",0]],["option",4]],[[["u32",0]]],[[["u32",0]]],[[["intoiterator",8]]],[[["",0],["",0]]],null,null,[[["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0],["statmode",3]],["bool",0]],null,[[]],null,[[["",0],["statmode",3]],["option",4,[["ordering",4]]]],[[["",0],["userbuffer",3]],["usize",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0],["bool",0]]],null,[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["",0]],["bool",0]],[[["",0],["userbuffer",3]],["usize",0]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]]],[[["openflags",3]]],[[["",0]]],[[["",0]],["u32",0]],null,[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["openflags",3]],[[["",0],["",0]]],[[["",0],["openflags",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],[[["",0]],["arc",3]],[[]],[[]],[[["",0],["openflags",3]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",0]],["option",4]],[[["u32",0]]],[[["u32",0]]],[[["intoiterator",8]]],[[["",0],["",0]]],null,null,[[["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["",0],["openflags",3]],["bool",0]],[[["bool",0],["bool",0],["arc",3,[["inode",3]]]]],[[]],null,[[["str",0],["openflags",3]],["option",4,[["arc",3,[["osinode",3]]]]]],[[["",0],["openflags",3]],["option",4,[["ordering",4]]]],[[["",0],["userbuffer",3]],["usize",0]],[[["",0]],["vec",3,[["u8",0]]]],[[["",0]]],[[["",0]],["bool",0]],null,[[["",0]]],[[["",0],["bool",0]]],[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["",0]],["bool",0]],null,[[["",0],["userbuffer",3]],["usize",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0],["userbuffer",3]],["usize",0]],[[["",0],["userbuffer",3]],["usize",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["userbuffer",3]],["usize",0]],[[["",0],["userbuffer",3]],["usize",0]],[[["panicinfo",3]],["never",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["metadata",3]],["bool",0]],[[["",0]]],[[]],[[]],[[]],[[["",0],["record",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["physpagenum",3]],[[["",0]],["virtpagenum",3]],[[["",0]],["physaddr",3]],[[["",0]],["virtaddr",3]],[[["",0]],["physpagenum",3]],[[["",0]],["virtpagenum",3]],[[["",0]],["simplerange",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["physaddr",3]],["ordering",4]],[[["",0],["virtaddr",3]],["ordering",4]],[[["",0],["physpagenum",3]],["ordering",4]],[[["",0],["virtpagenum",3]],["ordering",4]],null,null,[[["",0],["physaddr",3]],["bool",0]],[[["",0],["virtaddr",3]],["bool",0]],[[["",0],["physpagenum",3]],["bool",0]],[[["",0],["virtpagenum",3]],["bool",0]],[[["",0]],["physpagenum",3]],[[["",0]],["virtpagenum",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[["physpagenum",3]]],[[]],[[["virtpagenum",3]]],[[["usize",0]]],[[]],[[["physaddr",3]]],[[["usize",0]]],[[]],[[["virtaddr",3]]],[[["usize",0]]],[[]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0],["physaddr",3]],["bool",0]],[[["",0],["virtaddr",3]],["bool",0]],[[["",0],["physpagenum",3]],["bool",0]],[[["",0],["virtpagenum",3]],["bool",0]],[[]],[[]],[[["",0]],["option",4]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["physaddr",3]],["option",4,[["ordering",4]]]],[[["",0],["virtaddr",3]],["option",4,[["ordering",4]]]],[[["",0],["physpagenum",3]],["option",4,[["ordering",4]]]],[[["",0],["virtpagenum",3]],["option",4,[["ordering",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["option",4,[["physpagenum",3]]]],[[["",0]],["option",4,[["physpagenum",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["physpagenum",3]]],[[["",0],["physpagenum",3]]],[[["",0]],["upsafecell",3]],[[["",0]]],null,[[["",0],["formatter",3]],["result",6]],[[],["option",4,[["frametracker",3]]]],[[]],[[["physpagenum",3]]],[[]],[[]],[[]],[[["",0],["physpagenum",3],["physpagenum",3]]],[[]],[[]],[[]],[[]],[[]],[[["physpagenum",3]]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["layout",3]],["never",0]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[]],null,[[]],[[["",0]]],[[["mappermission",3]]],[[["",0]]],[[["",0]],["u8",0]],null,[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["maptype",4]],[[["",0]],["mappermission",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["mappermission",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],[[["",0],["pagetable",3]]],null,[[["",0]],["arc",3]],[[]],null,null,null,[[]],[[["",0],["maptype",4]],["bool",0]],[[["",0],["mappermission",3]],["bool",0]],null,null,[[["",0],["intoiterator",8]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["maparea",3]]],[[["u8",0]],["option",4]],[[["u8",0]]],[[["u8",0]]],[[]],[[["memoryset",3]],["memoryset",3]],[[["intoiterator",8]]],[[["",0],["",0]]],[[["",0]]],[[["",0],["virtaddr",3],["virtaddr",3],["mappermission",3]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["usize",0]],[[["",0],["pagetable",3]]],[[["",0],["pagetable",3],["virtpagenum",3]]],null,[[["",0]]],null,[[["",0],["mappermission",3]],["bool",0]],[[["virtaddr",3],["virtaddr",3],["maptype",4],["mappermission",3]]],[[]],[[]],[[]],null,[[["",0],["mappermission",3]],["option",4,[["ordering",4]]]],[[["",0],["maparea",3],["option",4]]],[[["",0]]],[[]],[[["",0]]],[[["",0],["virtpagenum",3]]],null,null,[[["",0],["bool",0]]],null,null,null,[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0],["virtpagenum",3]],["option",4,[["pagetableentry",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["",0],["pagetable",3]]],[[["",0],["pagetable",3],["virtpagenum",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["",0]]],[[["pteflags",3]]],[[["",0]]],[[["",0]],["u8",0]],null,null,[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0]],["pteflags",3]],[[["",0]],["pagetableentry",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["pteflags",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],null,null,[[]],[[]],[[]],[[["",0],["pteflags",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0],["virtpagenum",3]],["option",4,[["pagetableentry",3]]]],[[["",0],["virtpagenum",3]],["option",4,[["pagetableentry",3]]]],[[["",0]],["pteflags",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4]],[[["u8",0]]],[[["u8",0]]],[[["intoiterator",8]]],[[["usize",0]]],[[["",0],["",0]]],[[["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0],["virtpagenum",3],["physpagenum",3],["pteflags",3]]],[[["",0],["pteflags",3]],["bool",0]],[[]],[[["vec",3]]],[[["physpagenum",3],["pteflags",3]]],[[["",0]],["option",4]],[[]],[[["",0],["pteflags",3]],["option",4,[["ordering",4]]]],[[["",0]],["physpagenum",3]],[[["",0]],["bool",0]],[[["",0]]],null,[[["",0],["bool",0]]],[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0],["virtpagenum",3]],["option",4,[["pagetableentry",3]]]],[[["",0],["virtaddr",3]],["option",4,[["physaddr",3]]]],[[["usize",0],["usize",0]],["vec",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["",0],["virtpagenum",3]]],[[["",0]],["bool",0]],null,null,null,null,[[],["usize",0]],[[["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0]],["usize",0]],[[["usize",0]]],[[],["never",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["refmut",3]],[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",0]],["isize",0]],[[["usize",0]],["isize",0]],[[["usize",0]],["isize",0]],[[],["isize",0]],[[["u32",0]],["isize",0]],[[["usize",0],["usize",0]],["isize",0]],[[],["isize",0]],[[["usize",0],["usize",0]],["isize",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["taskinfo",3]],[[["",0],["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[],["isize",0]],[[["i32",0]],["never",0]],[[],["isize",0]],[[["usize",0]],["isize",0]],[[],["isize",0]],[[["usize",0],["usize",0],["usize",0]],["isize",0]],[[["usize",0],["usize",0]],["isize",0]],[[["isize",0]],["isize",0]],[[],["isize",0]],[[],["isize",0]],[[["isize",0]],["isize",0]],[[],["isize",0]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["arc",3]],[[["i32",0]]],[[]],[[]],null,null,null,[[]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["taskcontext",3]],[[["",0],["",0]]],[[]],[[["usize",0]]],[[]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0],["arc",3,[["taskcontrolblock",3]]]]],[[["arc",3,[["taskcontrolblock",3]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["upsafecell",3]],[[["",0]],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],[[],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["pidhandle",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["usize",0]]],[[["",0]],["upsafecell",3]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[]],[[]],[[]],[[]],[[["usize",0]]],[[]],[[["pidhandle",3]]],null,[[],["pidhandle",3]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],null,[[],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],[[],["trapcontext",3]],[[],["usize",0]],[[["",0]],["upsafecell",3]],[[]],[[]],[[["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],[[],["option",4,[["arc",3,[["taskcontrolblock",3]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["usize",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["taskstatus",4]],[[["",0],["",0]]],[[["",0],["taskstatus",4]],["bool",0]],[[["",0]]],null,null,[[["arc",3]],["arc",3,[["taskcontrolblock",3]]]],[[]],[[]],[[]],[[["",0]],["taskstatus",4]],[[["",0]],["trapcontext",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,[[["",0]],["refmut",3,[["taskcontrolblockinner",3]]]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,null,[[]],null,null,null,null,[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[]],null,[[]],[[]],[[]],[[]],[[],["never",0]],[[],["never",0]],[[],["never",0]],null,[[["usize",0],["usize",0],["usize",0],["usize",0],["usize",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],null,null,null,[[["",0],["usize",0]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null],"p":[[4,"ANSICON"],[3,"Stdout"],[3,"BLOCK_DEVICE"],[3,"VirtIOBlock"],[3,"QUEUE_FRAMES"],[3,"StatMode"],[3,"Stat"],[8,"File"],[3,"OpenFlags"],[3,"ROOT_INODE"],[3,"OSInode"],[3,"OSInodeInner"],[3,"Stdin"],[3,"Stdout"],[3,"SimpleLogger"],[3,"PhysAddr"],[3,"VirtAddr"],[3,"PhysPageNum"],[3,"VirtPageNum"],[3,"SimpleRangeIterator"],[3,"SimpleRange"],[8,"StepByOne"],[3,"FRAME_ALLOCATOR"],[8,"FrameAllocator"],[3,"StackFrameAllocator"],[3,"FrameTracker"],[4,"MapType"],[3,"MapPermission"],[3,"KERNEL_SPACE"],[3,"MemorySet"],[3,"MapArea"],[3,"PTEFlags"],[3,"PageTableEntry"],[3,"PageTable"],[3,"UserBuffer"],[3,"UserBufferIterator"],[3,"UPSafeCell"],[3,"TimeVal"],[3,"TaskInfo"],[3,"INITPROC"],[3,"TaskContext"],[3,"TASK_MANAGER"],[3,"TaskManager"],[3,"PidHandle"],[3,"PID_ALLOCATOR"],[3,"PidAllocator"],[3,"KernelStack"],[3,"PROCESSOR"],[3,"Processor"],[4,"TaskStatus"],[3,"TaskControlBlockInner"],[3,"TaskControlBlock"],[3,"TrapContext"]]},\
"riscv":{"doc":"Low level access to RISC-V processors","t":[0,0,0,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,14,14,14,8,8,8,8,8,8,6,6,6,8,6,8,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,0,0,0,10,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,8,3,3,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,10,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,8,11,11,11,11,11,5,5,5,11,11,11,11,11,11,10,11,11,11,11,11,11,18,18,17,18,6,6,6,6,6,16,4,16,13,8,8,8,8,18,13,4,8,8,3,16,3,3,8,16,8,8,16,13,13,13,6,6,6,6,3,3,3,3,3,6,6,13,13,18,18,18,17,17,17,17,6,6,3,6,6,6,3,6,6,6,3,6,18,4,16,18,18,10,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,10,10,11,11,11,11,10,11,11,11,10,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,3,4,3,13,13,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,11,11,11,11,11,3,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,5,11,11,11,11,11,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,3,11,11,11,5,5,5,11,11,11,11,11,11,5,5,11,5,11,5,11,11,11,11,11,11,11,3,11,11,11,5,5,5,5,11,11,11,11,11,5,5,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,3,11,11,11,5,5,5,5,11,11,11,11,11,5,5,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,13,13,13,4,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,5,11,5,11,11,5,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,3,11,11,11,5,5,5,11,11,11,11,11,5,5,11,5,11,5,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,3,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,5,5,5,5,5,5,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,5,5,5,3,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,13,13,13,4,13,4,13,3,13,13,13,4,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,5,11,5,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,5,13,4,13,13,13,13,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,3,11,11,11,5,5,5,5,5,5,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,4,3,13,13,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,11,5,11,5,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,5,3,11,11,11,11,11,11,11,5,11,11,11,5,5,3,11,11,11,5,5,5,11,11,11,11,5,5,5,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,3,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,5,11,11,11,11,5,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,3,11,11,11,5,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,5,5,3,11,11,11,5,5,5,11,11,11,11,11,5,11,5,11,5,11,5,11,11,11,11,11,11,11,3,11,11,11,5,5,5,11,11,11,11,11,5,11,5,11,5,11,5,11,11,11,11,11,11,11,5,5,13,13,13,4,3,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,5,11,5,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["addr","asm","interrupt","paging","pte_index","pte_index","pte_index","pte_index","pte_index_mut","pte_index_mut","pte_index_mut","pte_index_mut","register","to_pte_slice","to_pte_slice","to_pte_slice","to_pte_slice","to_pte_slice_mut","to_pte_slice_mut","to_pte_slice_mut","to_pte_slice_mut","use_sv32","use_sv39","use_sv48","Address","AddressL2","AddressL3","AddressL4","AddressX32","AddressX64","Frame","Page","PhysAddr","PhysicalAddress","VirtAddr","VirtualAddress","as_mut","as_u32","as_u64","as_usize","from_page_table_indices","from_page_table_indices","from_page_table_indices","gpax4","new","new_u32","new_u64","p1_index","p1_index","p1_index","p2_index","p2_index","p2_index","p3_index","p3_index","p4_index","page","page_number","page_offset","sv32","sv39","sv48","to_4k_aligned","GPAddrSv32X4","GPAddrSv39X4","GPAddrSv48X4","as_mut","as_mut","as_mut","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_page_table_indices","from_page_table_indices","from_page_table_indices","into","into","into","ne","ne","ne","new","new","new","new_u64","new_u64","new_u64","p1_index","p1_index","p1_index","p2_index","p2_index","p2_index","p3_index","p3_index","p4_index","page_number","page_number","page_number","page_offset","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","to_4k_aligned","to_4k_aligned","to_4k_aligned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BIT_LENGTH","BitField","FrameWith","PageWith","PageWithL2","PageWithL3","PageWithL4","as_kernel_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","from","from","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","from_page_table_indices","get_bit","get_bits","into","into","ne","ne","number","number","of_addr","of_addr","of_ppn","of_vpn","p1_index","p1_index","p1_index","p1_index","p1_index","p1_index","p1_index","p1_index","p1_index","p2_index","p2_index","p2_index","p2_index","p2_index","p2_index","p2_index","p2_index","p2_index","p3_index","p3_index","p3_index","p3_index","p3_index","p3_index","p4_index","p4_index","p4_index","partial_cmp","partial_cmp","set_bit","set_bits","start_address","start_address","try_from","try_from","try_into","try_into","type_id","type_id","PhysAddrSv32","VirtAddrSv32","as_mut","as_u32","as_u64","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","from","from","from_page_table_indices","into","into","ne","ne","new","new","new_u32","new_u64","p1_index","p2_index","page_number","page_number","page_offset","page_offset","partial_cmp","partial_cmp","to_4k_aligned","to_4k_aligned","try_from","try_from","try_into","try_into","type_id","type_id","PhysAddrSv39","VirtAddrSv39","as_mut","as_u64","as_u64","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","from","from","from_page_table_indices","into","into","ne","ne","new","new","new_u64","new_u64","p1_index","p2_index","p3_index","page_number","page_number","page_offset","page_offset","partial_cmp","partial_cmp","to_4k_aligned","to_4k_aligned","try_from","try_from","try_into","try_into","type_id","type_id","PhysAddrSv48","VirtAddrSv48","as_mut","as_u64","as_u64","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","from","from","from_page_table_indices","into","into","ne","ne","new","new","new_u64","new_u64","p1_index","p2_index","p3_index","p4_index","page_number","page_number","page_offset","page_offset","partial_cmp","partial_cmp","to_4k_aligned","to_4k_aligned","try_from","try_from","try_into","try_into","type_id","type_id","ebreak","hfence_gvma","hfence_vvma","hlv_b","hlv_bu","hlv_d","hlv_h","hlv_hu","hlv_w","hlv_wu","hlvx_hu","hlvx_wu","hsv_b","hsv_d","hsv_h","hsv_w","sfence_vma","sfence_vma_all","wfi","CriticalSection","Mutex","Nr","borrow","borrow","borrow","borrow_mut","borrow_mut","disable","enable","free","from","from","into","into","new","new","nr","try_from","try_from","try_into","try_into","type_id","type_id","ACCESSED","DIRTY","ENTRY_COUNT","EXECUTABLE","Entries","Entries32","Entries32X4","Entries64","Entries64X4","Entry","FlagUpdateError","Frame","FrameAllocationFailed","FrameAllocator","FrameAllocatorFor","FrameDeallocator","FrameDeallocatorFor","GLOBAL","InvalidFrameAddress","MapToError","Mapper","MapperExt","MapperFlush","MapperFlush","MapperFlushGPA","MapperFlushGPT","MapperFlushable","P","PTE","PTEIterableSlice","Page","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageTable","PageTable32X4","PageTable64X4","PageTableEntry","PageTableEntryX32","PageTableEntryX64","PageTableEntryX64Printer","PageTableFlags","PageTableWith","PageTableX32","PageTableX64","ParentEntryHugePage","ParentEntryHugePage","READABLE","RESERVED1","RESERVED2","RV32_ENTRY_COUNT","RV32_X4_ENTRY_COUNT","RV64_ENTRY_COUNT","RV64_X4_ENTRY_COUNT","Rv32PageTable","Rv32PageTableGuest","Rv32PageTableWith","Rv32PageTableX4","Rv39PageTable","Rv39PageTableGuest","Rv39PageTableWith","Rv39PageTableX4","Rv48PageTable","Rv48PageTableGuest","Rv48PageTableWith","Rv48PageTableX4","USER","UnmapError","V","VALID","WRITABLE","addr","addr","addr","all","alloc","alloc","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","complement","contains","dealloc","dealloc","debug_sv39","debug_sv48","difference","empty","eq","extend","flags","flags","flags","flags_mut","flags_mut","flags_mut","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","frame","frame","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","identity_map","identity_map","ignore","ignore","ignore","ignore","index","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","is_unused","is_unused","is_unused","map_to","map_to","map_to","map_to","ne","new","new","new","new","new","new","new","not","partial_cmp","ppn","ppn","ppn","ppn_u64","ppn_u64","ppn_u64","pte_index","pte_index_mut","ref_entry","ref_entry","ref_entry","ref_entry","remove","set","set","set","set","set_unused","set_unused","set_unused","sub","sub_assign","symmetric_difference","to_pte_slice","to_pte_slice_mut","toggle","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap","unmap","unmap","update_flags","update_flags","zero","0","fcsr","hcounteren","hedeleg","hgatp","hgeie","hgeip","hideleg","hie","hip","hpmcounter10","hpmcounter10h","hpmcounter11","hpmcounter11h","hpmcounter12","hpmcounter12h","hpmcounter13","hpmcounter13h","hpmcounter14","hpmcounter14h","hpmcounter15","hpmcounter15h","hpmcounter16","hpmcounter16h","hpmcounter17","hpmcounter17h","hpmcounter18","hpmcounter18h","hpmcounter19","hpmcounter19h","hpmcounter20","hpmcounter20h","hpmcounter21","hpmcounter21h","hpmcounter22","hpmcounter22h","hpmcounter23","hpmcounter23h","hpmcounter24","hpmcounter24h","hpmcounter25","hpmcounter25h","hpmcounter26","hpmcounter26h","hpmcounter27","hpmcounter27h","hpmcounter28","hpmcounter28h","hpmcounter29","hpmcounter29h","hpmcounter3","hpmcounter30","hpmcounter30h","hpmcounter31","hpmcounter31h","hpmcounter3h","hpmcounter4","hpmcounter4h","hpmcounter5","hpmcounter5h","hpmcounter6","hpmcounter6h","hpmcounter7","hpmcounter7h","hpmcounter8","hpmcounter8h","hpmcounter9","hpmcounter9h","hstatus","htimedelta","htimedeltah","htinst","htval","hvip","marchid","mcause","mcycle","mcycleh","medeleg","mepc","mhartid","mhpmcounter10","mhpmcounter10h","mhpmcounter11","mhpmcounter11h","mhpmcounter12","mhpmcounter12h","mhpmcounter13","mhpmcounter13h","mhpmcounter14","mhpmcounter14h","mhpmcounter15","mhpmcounter15h","mhpmcounter16","mhpmcounter16h","mhpmcounter17","mhpmcounter17h","mhpmcounter18","mhpmcounter18h","mhpmcounter19","mhpmcounter19h","mhpmcounter20","mhpmcounter20h","mhpmcounter21","mhpmcounter21h","mhpmcounter22","mhpmcounter22h","mhpmcounter23","mhpmcounter23h","mhpmcounter24","mhpmcounter24h","mhpmcounter25","mhpmcounter25h","mhpmcounter26","mhpmcounter26h","mhpmcounter27","mhpmcounter27h","mhpmcounter28","mhpmcounter28h","mhpmcounter29","mhpmcounter29h","mhpmcounter3","mhpmcounter30","mhpmcounter30h","mhpmcounter31","mhpmcounter31h","mhpmcounter3h","mhpmcounter4","mhpmcounter4h","mhpmcounter5","mhpmcounter5h","mhpmcounter6","mhpmcounter6h","mhpmcounter7","mhpmcounter7h","mhpmcounter8","mhpmcounter8h","mhpmcounter9","mhpmcounter9h","mhpmevent10","mhpmevent11","mhpmevent12","mhpmevent13","mhpmevent14","mhpmevent15","mhpmevent16","mhpmevent17","mhpmevent18","mhpmevent19","mhpmevent20","mhpmevent21","mhpmevent22","mhpmevent23","mhpmevent24","mhpmevent25","mhpmevent26","mhpmevent27","mhpmevent28","mhpmevent29","mhpmevent3","mhpmevent30","mhpmevent31","mhpmevent4","mhpmevent5","mhpmevent6","mhpmevent7","mhpmevent8","mhpmevent9","mideleg","mie","mimpid","minstret","minstreth","mip","misa","mscratch","mstatus","mtval","mtvec","mvendorid","pmpaddr0","pmpaddr1","pmpaddr10","pmpaddr11","pmpaddr12","pmpaddr13","pmpaddr14","pmpaddr15","pmpaddr2","pmpaddr3","pmpaddr4","pmpaddr5","pmpaddr6","pmpaddr7","pmpaddr8","pmpaddr9","pmpcfg0","pmpcfg1","pmpcfg2","pmpcfg3","satp","scause","sepc","sie","sip","sscratch","sstatus","stval","stvec","time","timeh","ucause","uepc","uie","uip","uscratch","ustatus","utval","utvec","vsatp","vscause","vsepc","vsie","vsip","vsscratch","vsstatus","vstval","vstvec","DZ","FCSR","Flag","Flags","Invalid","NV","NX","OF","RoundDown","RoundToNearestEven","RoundToNearestMaxMagnitude","RoundTowardsZero","RoundUp","RoundingMode","UF","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_flag","clear_flags","clone","clone","clone","clone","dz","eq","fflags","fmt","fmt","fmt","fmt","frm","from","from","from","from","into","into","into","into","nv","nx","of","read","set_rounding_mode","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uf","Hcounteren","bits","borrow","borrow_mut","clear_cy","clear_hpm10","clear_hpm11","clear_hpm12","clear_hpm13","clear_hpm14","clear_hpm15","clear_hpm16","clear_hpm17","clear_hpm18","clear_hpm19","clear_hpm20","clear_hpm21","clear_hpm22","clear_hpm23","clear_hpm24","clear_hpm25","clear_hpm26","clear_hpm27","clear_hpm28","clear_hpm29","clear_hpm3","clear_hpm30","clear_hpm31","clear_hpm4","clear_hpm5","clear_hpm6","clear_hpm7","clear_hpm8","clear_hpm9","clear_ir","clear_tm","clone","cy","fmt","from","from_bits","hpm10","hpm11","hpm12","hpm13","hpm14","hpm15","hpm16","hpm17","hpm18","hpm19","hpm20","hpm21","hpm22","hpm23","hpm24","hpm25","hpm26","hpm27","hpm28","hpm29","hpm3","hpm30","hpm31","hpm4","hpm5","hpm6","hpm7","hpm8","hpm9","into","ir","read","set_cy","set_cy","set_hpm10","set_hpm10","set_hpm11","set_hpm11","set_hpm12","set_hpm12","set_hpm13","set_hpm13","set_hpm14","set_hpm14","set_hpm15","set_hpm15","set_hpm16","set_hpm16","set_hpm17","set_hpm17","set_hpm18","set_hpm18","set_hpm19","set_hpm19","set_hpm20","set_hpm20","set_hpm21","set_hpm21","set_hpm22","set_hpm22","set_hpm23","set_hpm23","set_hpm24","set_hpm24","set_hpm25","set_hpm25","set_hpm26","set_hpm26","set_hpm27","set_hpm27","set_hpm28","set_hpm28","set_hpm29","set_hpm29","set_hpm3","set_hpm3","set_hpm30","set_hpm30","set_hpm31","set_hpm31","set_hpm4","set_hpm4","set_hpm5","set_hpm5","set_hpm6","set_hpm6","set_hpm7","set_hpm7","set_hpm8","set_hpm8","set_hpm9","set_hpm9","set_ir","set_ir","set_tm","set_tm","tm","try_from","try_into","type_id","write","Hedeleg","bits","borrow","borrow_mut","clear_ex0","clear_ex1","clear_ex12","clear_ex13","clear_ex15","clear_ex2","clear_ex3","clear_ex4","clear_ex5","clear_ex6","clear_ex7","clear_ex8","clone","ex0","ex1","ex12","ex13","ex15","ex2","ex3","ex4","ex5","ex6","ex7","ex8","fmt","from","from_bits","into","read","set_ex0","set_ex0","set_ex1","set_ex1","set_ex12","set_ex12","set_ex13","set_ex13","set_ex15","set_ex15","set_ex2","set_ex2","set_ex3","set_ex3","set_ex4","set_ex4","set_ex5","set_ex5","set_ex6","set_ex6","set_ex7","set_ex7","set_ex8","set_ex8","try_from","try_into","type_id","write","Bare","Hgatp","HgatpValues","Sv39x4","Sv48x4","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","fmt","fmt","from","from","from_bits","into","into","mode","ppn","read","set_mode","set_ppn","set_vmid","try_from","try_from","try_into","try_into","type_id","type_id","vmid","write","read","write","read","write","Hideleg","bits","borrow","borrow_mut","clear_eip","clear_sip","clear_tip","clone","eip","fmt","from","from_bits","into","read","set_eip","set_eip","set_sip","set_sip","set_tip","set_tip","sip","tip","try_from","try_into","type_id","write","Hie","bits","borrow","borrow_mut","clear_sgeie","clear_vseie","clear_vssie","clear_vstie","clone","fmt","from","from_bits","into","read","set_sgeie","set_sgeie","set_vseie","set_vseie","set_vssie","set_vssie","set_vstie","set_vstie","sgeie","try_from","try_into","type_id","vseie","vssie","vstie","write","Hip","bits","borrow","borrow_mut","clear_sgeip","clear_vseip","clear_vssip","clear_vstip","clone","fmt","from","from_bits","into","read","set_sgeip","set_sgeip","set_vseip","set_vseip","set_vssip","set_vssip","set_vstip","set_vstip","sgeip","try_from","try_into","type_id","vseip","vssip","vstip","write","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read64","read","read","read64","read","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","Hstatus","Vsxl128","Vsxl32","Vsxl64","VsxlValues","bits","borrow","borrow","borrow_mut","borrow_mut","clear_gva","clear_hu","clear_spv","clear_spvp","clear_vsbe","clear_vtsr","clear_vtvm","clear_vtw","clone","clone","fmt","fmt","from","from","from_bits","gva","hu","into","into","read","set_gva","set_gva","set_hu","set_hu","set_spv","set_spv","set_spvp","set_spvp","set_vgein","set_vsbe","set_vsbe","set_vsxl","set_vtsr","set_vtsr","set_vtvm","set_vtvm","set_vtw","set_vtw","spv","spvp","try_from","try_from","try_into","try_into","type_id","type_id","vgein","vsbe","vsxl","vtsr","vtvm","vtw","write","read","read64","write","read","write","read","write","read","write","Hvip","bits","borrow","borrow_mut","clear_vseip","clear_vssip","clear_vstip","clone","fmt","from","from_bits","into","read","set_vseip","set_vseip","set_vssip","set_vssip","set_vstip","set_vstip","try_from","try_into","type_id","vseip","vssip","vstip","write","Marchid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadMisaligned","LoadPageFault","MachineEnvCall","MachineExternal","MachineSoft","MachineTimer","Mcause","StoreFault","StoreMisaligned","StorePageFault","SupervisorEnvCall","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","ne","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","read","read64","read","Medeleg","bits","borrow","borrow_mut","breakpoint","clear_breakpoint","clear_illegal_instruction","clear_instruction_fault","clear_instruction_misaligned","clear_instruction_page_fault","clear_load_fault","clear_load_misaligned","clear_load_page_fault","clear_machine_env_call","clear_store_fault","clear_store_misaligned","clear_store_page_fault","clear_supervisor_env_call","clear_user_env_call","clone","fmt","from","illegal_instruction","instruction_fault","instruction_misaligned","instruction_page_fault","into","load_fault","load_misaligned","load_page_fault","machine_env_call","read","set_breakpoint","set_illegal_instruction","set_instruction_fault","set_instruction_misaligned","set_instruction_page_fault","set_load_fault","set_load_misaligned","set_load_page_fault","set_machine_env_call","set_store_fault","set_store_misaligned","set_store_page_fault","set_supervisor_env_call","set_user_env_call","store_fault","store_misaligned","store_page_fault","supervisor_env_call","try_from","try_into","type_id","user_env_call","read","write","read","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","Mideleg","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mie","bits","borrow","borrow_mut","clear_mext","clear_msoft","clear_mtimer","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_mext","set_msoft","set_mtimer","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mimpid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","read","read64","read","Mip","bits","borrow","borrow_mut","clear_msoft","clear_mtimer","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_msoft","set_mtimer","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","MXL","Misa","XLEN128","XLEN32","XLEN64","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","has_extension","into","into","mxl","read","try_from","try_from","try_into","try_into","type_id","type_id","read","write","AllOff","Clean","Dirty","FS","Initial","MPP","Machine","Mstatus","NoneDirtyOrClean","NoneDirtySomeClean","Off","SPP","SomeDirty","Supervisor","Supervisor","User","User","XS","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_mie","clear_sie","clear_uie","clone","clone","clone","clone","clone","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","fs","into","into","into","into","into","mie","mpie","mpp","read","sd","set_fs","set_mie","set_mie","set_mpie","set_mpie","set_mpp","set_mpp","set_sie","set_spie","set_spp","set_uie","set_upie","sie","spie","spp","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uie","upie","xs","read","Direct","Mtvec","TrapMode","Vectored","address","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","into","into","read","trap_mode","try_from","try_from","try_into","try_into","type_id","type_id","write","Mvendorid","bits","borrow","borrow_mut","clone","fmt","from","into","jedec_manufacturer","read","try_from","try_into","type_id","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","Bare","Mode","Satp","Sv39","Sv48","Sv57","Sv64","asid","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","frame","from","from","into","into","mode","ppn","read","set","try_from","try_from","try_into","try_into","type_id","type_id","write","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionGuestPageFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadGuestPageFault","LoadPageFault","Scause","StoreFault","StoreGuestPageFault","StoreMisaligned","StorePageFault","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","VirtualInstruction","VirtualSupervisorEnvCall","VirtualSupervisorExternal","VirtualSupervisorSoft","VirtualSupervisorTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","ne","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","read","write","Sie","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Sip","bits","borrow","borrow_mut","clone","fmt","from","into","read","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","read","write","SPP","Sstatus","Supervisor","User","bits","borrow","borrow","borrow_mut","borrow_mut","clear_mxr","clear_sie","clear_sum","clear_uie","clone","clone","eq","fmt","fmt","from","from","fs","into","into","mxr","read","sd","set_fs","set_mxr","set_sie","set_sie","set_spie","set_spie","set_spp","set_spp","set_sum","set_uie","set_upie","sie","spie","spp","sum","try_from","try_from","try_into","try_into","type_id","type_id","uie","upie","xs","read","Stvec","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write","read","read64","read","Ucause","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","read","write","Uie","bits","borrow","borrow_mut","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_uext","set_usoft","set_utimer","try_from","try_into","type_id","uext","usoft","utimer","Uip","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","uext","usoft","utimer","read","write","Ustatus","borrow","borrow_mut","clear_uie","clone","fmt","from","into","read","set_uie","set_upie","try_from","try_into","type_id","uie","upie","read","Utvec","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write","Bare","HgatpValues","Sv39x4","Sv48x4","Vsatp","asid","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","fmt","fmt","from","from","from_bits","into","into","mode","ppn","read","set_asid","set_mode","set_ppn","try_from","try_from","try_into","try_into","type_id","type_id","write","Vscause","bits","borrow","borrow_mut","clear_interrupt","clone","code","fmt","from","from_bits","interrupt","into","read","set_code","set_interrupt","set_interrupt","try_from","try_into","type_id","write","read","write","Vsie","bits","borrow","borrow_mut","clear_seie","clear_ssie","clear_stie","clone","fmt","from","from_bits","into","read","seie","set_seie","set_seie","set_ssie","set_ssie","set_stie","set_stie","ssie","stie","try_from","try_into","type_id","write","Vsip","bits","borrow","borrow_mut","clear_seip","clear_ssip","clear_stip","clone","fmt","from","from_bits","into","read","seip","set_seip","set_seip","set_ssip","set_ssip","set_stip","set_stip","ssip","stip","try_from","try_into","type_id","write","read","write","Uxl128","Uxl32","Uxl64","UxlValues","Vsstatus","bits","borrow","borrow","borrow_mut","borrow_mut","clear_mxr","clear_sie","clear_spie","clear_spp","clear_sum","clear_ube","clone","clone","fmt","fmt","from","from","from_bits","fs","into","into","mxr","read","sd","set_fs","set_mxr","set_mxr","set_sd","set_sie","set_sie","set_spie","set_spie","set_spp","set_spp","set_sum","set_sum","set_ube","set_ube","set_uxl","set_xs","sie","spie","spp","sum","try_from","try_from","try_into","try_into","type_id","type_id","ube","uxl","write","xs","read","write","Vstvec","base","bits","borrow","borrow_mut","clone","fmt","from","from_bits","into","mode","read","set_base","set_mode","try_from","try_into","type_id","write"],"q":["riscv","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr::gpax4","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr::page","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr::sv32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr::sv39","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::addr::sv48","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::asm","","","","","","","","","","","","","","","","","","","riscv::interrupt","","","","","","","","","","","","","","","","","","","","","","","","riscv::pagingriscv::paging::UnmapError","riscv::register","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::fcsr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hcounteren","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hedeleg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hgatp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hgeie","","riscv::register::hgeip","","riscv::register::hideleg","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hpmcounter10","","riscv::register::hpmcounter10h","riscv::register::hpmcounter11","","riscv::register::hpmcounter11h","riscv::register::hpmcounter12","","riscv::register::hpmcounter12h","riscv::register::hpmcounter13","","riscv::register::hpmcounter13h","riscv::register::hpmcounter14","","riscv::register::hpmcounter14h","riscv::register::hpmcounter15","","riscv::register::hpmcounter15h","riscv::register::hpmcounter16","","riscv::register::hpmcounter16h","riscv::register::hpmcounter17","","riscv::register::hpmcounter17h","riscv::register::hpmcounter18","","riscv::register::hpmcounter18h","riscv::register::hpmcounter19","","riscv::register::hpmcounter19h","riscv::register::hpmcounter20","","riscv::register::hpmcounter20h","riscv::register::hpmcounter21","","riscv::register::hpmcounter21h","riscv::register::hpmcounter22","","riscv::register::hpmcounter22h","riscv::register::hpmcounter23","","riscv::register::hpmcounter23h","riscv::register::hpmcounter24","","riscv::register::hpmcounter24h","riscv::register::hpmcounter25","","riscv::register::hpmcounter25h","riscv::register::hpmcounter26","","riscv::register::hpmcounter26h","riscv::register::hpmcounter27","","riscv::register::hpmcounter27h","riscv::register::hpmcounter28","","riscv::register::hpmcounter28h","riscv::register::hpmcounter29","","riscv::register::hpmcounter29h","riscv::register::hpmcounter3","","riscv::register::hpmcounter30","","riscv::register::hpmcounter30h","riscv::register::hpmcounter31","","riscv::register::hpmcounter31h","riscv::register::hpmcounter3h","riscv::register::hpmcounter4","","riscv::register::hpmcounter4h","riscv::register::hpmcounter5","","riscv::register::hpmcounter5h","riscv::register::hpmcounter6","","riscv::register::hpmcounter6h","riscv::register::hpmcounter7","","riscv::register::hpmcounter7h","riscv::register::hpmcounter8","","riscv::register::hpmcounter8h","riscv::register::hpmcounter9","","riscv::register::hpmcounter9h","riscv::register::hstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::htimedelta","","","riscv::register::htimedeltah","","riscv::register::htinst","","riscv::register::htval","","riscv::register::hvip","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::marchid","","","","","","","","","","","","riscv::register::mcause","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mcause::Trap","","riscv::register::mcycle","","riscv::register::mcycleh","riscv::register::medeleg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mepc","","riscv::register::mhartid","riscv::register::mhpmcounter10","","","riscv::register::mhpmcounter10h","","riscv::register::mhpmcounter11","","","riscv::register::mhpmcounter11h","","riscv::register::mhpmcounter12","","","riscv::register::mhpmcounter12h","","riscv::register::mhpmcounter13","","","riscv::register::mhpmcounter13h","","riscv::register::mhpmcounter14","","","riscv::register::mhpmcounter14h","","riscv::register::mhpmcounter15","","","riscv::register::mhpmcounter15h","","riscv::register::mhpmcounter16","","","riscv::register::mhpmcounter16h","","riscv::register::mhpmcounter17","","","riscv::register::mhpmcounter17h","","riscv::register::mhpmcounter18","","","riscv::register::mhpmcounter18h","","riscv::register::mhpmcounter19","","","riscv::register::mhpmcounter19h","","riscv::register::mhpmcounter20","","","riscv::register::mhpmcounter20h","","riscv::register::mhpmcounter21","","","riscv::register::mhpmcounter21h","","riscv::register::mhpmcounter22","","","riscv::register::mhpmcounter22h","","riscv::register::mhpmcounter23","","","riscv::register::mhpmcounter23h","","riscv::register::mhpmcounter24","","","riscv::register::mhpmcounter24h","","riscv::register::mhpmcounter25","","","riscv::register::mhpmcounter25h","","riscv::register::mhpmcounter26","","","riscv::register::mhpmcounter26h","","riscv::register::mhpmcounter27","","","riscv::register::mhpmcounter27h","","riscv::register::mhpmcounter28","","","riscv::register::mhpmcounter28h","","riscv::register::mhpmcounter29","","","riscv::register::mhpmcounter29h","","riscv::register::mhpmcounter3","","","riscv::register::mhpmcounter30","","","riscv::register::mhpmcounter30h","","riscv::register::mhpmcounter31","","","riscv::register::mhpmcounter31h","","riscv::register::mhpmcounter3h","","riscv::register::mhpmcounter4","","","riscv::register::mhpmcounter4h","","riscv::register::mhpmcounter5","","","riscv::register::mhpmcounter5h","","riscv::register::mhpmcounter6","","","riscv::register::mhpmcounter6h","","riscv::register::mhpmcounter7","","","riscv::register::mhpmcounter7h","","riscv::register::mhpmcounter8","","","riscv::register::mhpmcounter8h","","riscv::register::mhpmcounter9","","","riscv::register::mhpmcounter9h","","riscv::register::mhpmevent10","","riscv::register::mhpmevent11","","riscv::register::mhpmevent12","","riscv::register::mhpmevent13","","riscv::register::mhpmevent14","","riscv::register::mhpmevent15","","riscv::register::mhpmevent16","","riscv::register::mhpmevent17","","riscv::register::mhpmevent18","","riscv::register::mhpmevent19","","riscv::register::mhpmevent20","","riscv::register::mhpmevent21","","riscv::register::mhpmevent22","","riscv::register::mhpmevent23","","riscv::register::mhpmevent24","","riscv::register::mhpmevent25","","riscv::register::mhpmevent26","","riscv::register::mhpmevent27","","riscv::register::mhpmevent28","","riscv::register::mhpmevent29","","riscv::register::mhpmevent3","","riscv::register::mhpmevent30","","riscv::register::mhpmevent31","","riscv::register::mhpmevent4","","riscv::register::mhpmevent5","","riscv::register::mhpmevent6","","riscv::register::mhpmevent7","","riscv::register::mhpmevent8","","riscv::register::mhpmevent9","","riscv::register::mideleg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mimpid","","","","","","","","","","","","riscv::register::minstret","","riscv::register::minstreth","riscv::register::mip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::misa","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mscratch","","riscv::register::mstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mtval","riscv::register::mtvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mvendorid","","","","","","","","","","","","","riscv::register::pmpaddr0","","riscv::register::pmpaddr1","","riscv::register::pmpaddr10","","riscv::register::pmpaddr11","","riscv::register::pmpaddr12","","riscv::register::pmpaddr13","","riscv::register::pmpaddr14","","riscv::register::pmpaddr15","","riscv::register::pmpaddr2","","riscv::register::pmpaddr3","","riscv::register::pmpaddr4","","riscv::register::pmpaddr5","","riscv::register::pmpaddr6","","riscv::register::pmpaddr7","","riscv::register::pmpaddr8","","riscv::register::pmpaddr9","","riscv::register::pmpcfg0","","riscv::register::pmpcfg1","","riscv::register::pmpcfg2","","riscv::register::pmpcfg3","","riscv::register::satp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::scause","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::scause::Trap","","riscv::register::sepc","","riscv::register::sie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::sip","","","","","","","","","","","","","","","","","","riscv::register::sscratch","","riscv::register::sstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::stval","riscv::register::stvec","","","","","","","","","","","","","","","riscv::register::time","","riscv::register::timeh","riscv::register::ucause","","","","","","","","","","","","riscv::register::uepc","","riscv::register::uie","","","","","","","","","","","","","","","","","","","","","riscv::register::uip","","","","","","","","","","","","","","","riscv::register::uscratch","","riscv::register::ustatus","","","","","","","","","","","","","","","","riscv::register::utval","riscv::register::utvec","","","","","","","","","","","","","","","riscv::register::vsatp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::vscause","","","","","","","","","","","","","","","","","","","","riscv::register::vsepc","","riscv::register::vsie","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::vsip","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::vsscratch","","riscv::register::vsstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::vstval","","riscv::register::vstvec","","","","","","","","","","","","","","","","",""],"d":["","Assembly instructions","Interrupts","","","","","","","","","","RISC-V CSR’s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bits in this bit field.","A generic trait which provides methods for extracting and …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","<code>EBREAK</code> instruction wrapper","","","","","","","","","","","","","","","","<code>SFENCE.VMA</code> instruction wrapper","<code>SFENCE.VMA</code> instruction wrapper (all address spaces and …","<code>WFI</code> instruction wrapper","Critical section token","A “mutex” based on critical sections","Interrupt number","","Borrows the data for the duration of the critical section","","","","Disables all interrupts","Enables all the interrupts","Execute closure <code>f</code> in an interrupt-free context.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a critical section token","Creates a new mutex","Returns the number associated with an interrupt","","","","","","","","","","","","","","","","","An error indicating that an <code>update_flags</code> call failed.","","An additional frame was needed for the mapping process, …","Polyfill for default use cases.","A trait for types that can allocate a frame of memory.","","A trait for types that can deallocate a frame of memory.","","The page table entry for the given page points to an …","This error is returned from <code>map_to</code> and similar methods.","","","","","","","","","","","","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","","","","","","","","Possible flags for a page table entry.","","","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","","","","","","","","","","This struct is a two level page table with <code>Mapper</code> trait …","","","","This struct is a three level page table with <code>Mapper</code> trait …","","","","This struct is a four level page table with <code>Mapper</code> trait …","","","An error indicating that an <code>unmap</code> call failed.","","","","","","","Returns the set containing all flags.","Allocate a frame of the appropriate size and return it if …","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Deallocate the given frame of memory.","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Flush the page from the TLB to ensure that the newest …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Maps the given frame to the virtual page with the same …","Maps the given frame to the virtual page with the same …","Don’t flush the TLB and silence the “must be used” …","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Creates a new mapping in the page table.","","","","","Create a new flush promise","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","Get the reference of the specified <code>page</code> entry","","","","Removes the specified flags in-place.","","","","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","Return the frame that the specified page is mapped to.","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Removes a mapping from the page table and returns the …","","","","Updates the flags of an existing mapping.","Updates the flags of an existing mapping.","Clears all entries.","","Floating-point control and status register","Hypervisor Guest External Interrupt Pending Register.","Hypervisor Exception Delegation Register.","Hypervisor Guest Address Translation and Protection …","Hypervisor Guest External Interrupt Enable Register.","Hypervisor Guest External Interrupt Pending Register.","Hypervisor Interrupt Delegation Register.","Hypervisor Interrupt Enable Register.","Hypervisor Interrupt Pending Register.","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","HStatus Register.","Hypervisor Time Delta Register.","Hypervisor Time Delta Register.","Hypervisor Trap Instruction Register.","Hypervisor Trap Value Register.","Hypervisor Virtual Interrupt Pending Register.","marchid register","mcause register","mcycle register","mcycleh register","medeleg register","mepc register","mhartid register","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","mideleg register","mie register","mimpid register","minstret register","minstreth register","mip register","misa register","mscratch register","mstatus register","mtval register","mtvec register","mvendorid register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection configuration","Physical memory protection configuration, RV32 only","Physical memory protection configuration","Physical memory protection configuration, RV32 only","satp register","scause register","sepc register","sie register","sip register","sscratch register","sstatus register","stval register","stvec register","time register","timeh register","ucause register","uepc register","uie register","uip register","uscratch register","ustatus register","utval register","stvec register","Virtual Supervisor Guest Address Translation and …","Virtual Supervisor Cause Register.","Virtual Supervisor Exception Program Counter.","Virtual Supevisor Interrupt Enable Register.","Virtual Supevisor Interrupt Pending Register.","Virtual Supervisor Scratch Register.","Hypervisor Guest External Interrupt Pending Register.","Virtual Supervisor Trap Value Register.","Virtual Supervisor Trap Vector Base Address Register.","Divide by Zero","Floating-point control and status register","Accrued Exception Flag","Accrued Exception Flags","","Invalid Operation","Inexact","Overflow","","","","","","Rounding Mode","Underflow","Returns the contents of the register as raw bits","","","","","","","","","Resets <code>fflags</code> field bit","Resets <code>fflags</code> field bits","","","","","Divide by Zero","","Accrued Exception Flags","","","","","Rounding Mode","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalid Operation","Inexact","Overflow","Reads the CSR","Writes the CSR","","","","","","","","","","","","","Underflow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Reads the CSR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instruction address misaligned","Instruction access fault","Instruction page fault ","Load page fault ","Store/AMO page fault ","Illegal instruction ","Breakpoint ","Load address misaligned ","Load access fault ","Store/AMO address misaligned ","Store/AMO access fault ","Environment call from U-mode or VU-mode ","","Instruction address misaligned","Instruction access fault","Instruction page fault","Load page fault","Store/AMO page fault","Illegal instruction","Breakpoint","Load address misaligned","Load access fault","Store/AMO address misaligned","Store/AMO access fault","Environment call from U-mode or VU-mode","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","Instruction address misaligned","","Instruction access fault","","Instruction page fault ","","Load page fault ","","Store/AMO page fault ","","Illegal instruction ","","Breakpoint ","","Load address misaligned ","","Load access fault ","","Store/AMO address misaligned ","","Store/AMO access fault ","","Environment call from U-mode or VU-mode ","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Guest address translation mode.","Physical Page Number for root page table.","Reads the CSR","","","","","","","","","","Virtual machine ID.","","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","","","","","External Interrupt ","Software Interrupt","Timer Interrupt","","External Interrupt","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","External Interrupt ","","Software Interrupt","","Timer Interrupt","","Software Interrupt","Timer Interrupt","","","","","","","","","Guest External Interrupt ","External Interrupt ","Software Interrupt","Timer Interrupt","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","Guest External Interrupt ","","External Interrupt ","","Software Interrupt","","Timer Interrupt","","Guest External Interrupt","","","","External Interrupt","Software Interrupt","Timer Interrupt","","","","","","Guest External Interrupt ","External Interrupt ","Software Interrupt","Timer Interrupt","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","Guest External Interrupt ","","External Interrupt ","","Software Interrupt","","Timer Interrupt","","Guest External Interrupt","","","","External Interrupt","Software Interrupt","Timer Interrupt","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","","","","","","","","","","","Guest Virtual Address.","Hypervisor User mode.","Supervisor Previous Virtualization mode.","Supervisor Previous Virtual Privilege.","VS access endianness.","TSR for VM.","TVM for VM.","TW for VM.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Guest Virtual Address.","Hypervisor User mode.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads the CSR","Guest Virtual Address.","","Hypervisor User mode.","","Supervisor Previous Virtualization mode.","","Supervisor Previous Virtual Privilege.","","","VS access endianness.","","","TSR for VM.","","TVM for VM.","","TW for VM.","","Supervisor Previous Virtualization mode.","Supervisor Previous Virtual Privilege.","","","","","","","Virtual Guest External Interrupt Number.","VS access endianness.","Effective XLEN for VM.","TSR for VM.","TVM for VM.","TW for VM.","","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","","","","","External Interrupt ","Software Interrupt","Timer Interrupt","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","External Interrupt ","","Software Interrupt","","Timer Interrupt","","","","","External Interrupt","Software Interrupt","Timer Interrupt","","marchid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","","Exception","","","","","","Interrupt","","","","","","","","","mcause register","","","","","","","","Trap Cause","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","","Reads the CSR","","","","","","","","","","","","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","medeleg register","Returns the contents of the register as raw bits","","","Breakpoint Delegate","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","","","Returns the argument unchanged.","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Calls <code>U::from(self)</code>.","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Reads the CSR","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","Store/AMO Access Fault Delegate","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","","","","Environment Call from U-mode Delegate","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","mideleg register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","","","","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","mie register","Returns the contents of the register as raw bits","","","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Reads the CSR","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","mimpid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","mip register","Returns the contents of the register as raw bits","","","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Pending","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Reads the CSR","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Machine XLEN","misa register","","","","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns true when the atomic extension is implemented.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the machine xlen.","Reads the CSR","","","","","","","Reads the CSR","Writes the CSR","All off","","","Floating-point extension state","","Machine Previous Privilege Mode","","mstatus register","None dirty or clean, some on","None dirty, some clean","","Supervisor Previous Privilege Mode","Some dirty","","","","","Additional extension state","","","","","","","","","","","Machine Interrupt Enable","Supervisor Interrupt Enable","User Interrupt Enable","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Floating-point extension state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Machine Interrupt Enable","Machine Previous Interrupt Enable","Machine Previous Privilege Mode","Reads the CSR","Whether either the FS field or XS field signals the …","Floating-point extension state","Machine Interrupt Enable","","Machine Previous Interrupt Enable","","Machine Previous Privilege Mode","","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","","","","","","","","","","","","","","","","User Interrupt Enable","User Previous Interrupt Enable","Additional extension state","Reads the CSR","","mtvec register","Trap mode","","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","","","","Writes the CSR","mvendorid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the JEDEC manufacturer ID","Reads the CSR","","","","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","","","satp register","","","","","Address space identifier","Returns the contents of the register as raw bits","","","","","","","","","","Physical frame","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Current address-translation scheme","Physical page number","Reads the CSR","","","","","","","","Writes the CSR","","Exception","","","","","","","Interrupt","","","","","scause register","","","","","","","","Trap Cause","","","","","","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","","Reads the CSR","","","","","","","","","","","","","","","Reads the CSR","Writes the CSR","sie register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","sip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","Supervisor Previous Privilege Mode","Supervisor Status Register","","","Returns the contents of the register as raw bits","","","","","Make eXecutable Readable","Supervisor Interrupt Enable","Permit Supervisor User Memory access","User Interrupt Enable","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The status of the floating-point unit","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make eXecutable Readable","Reads the CSR","Whether either the FS field or XS field signals the …","The status of the floating-point unit","Make eXecutable Readable","Supervisor Interrupt Enable","","Supervisor Previous Interrupt Enable","","Supervisor Previous Privilege Mode","","Permit Supervisor User Memory access","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","","","","","","","User Interrupt Enable","User Previous Interrupt Enable","The status of additional user-mode extensions and …","Reads the CSR","stvec register","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","ucause register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Reads the CSR","Writes the CSR","uie register","Returns the contents of the register as raw bits","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","uip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","ustatus register","","","User Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User Interrupt Enable","User Previous Interrupt Enable","","","","User Interrupt Enable","User Previous Interrupt Enable","Reads the CSR","stvec register","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR","","","","","","ASID.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Guest address translation mode.","Physical Page Number for root page table.","Reads the CSR","","","","","","","","","","","","","","","Is cause interrupt.","","Exception code","","Returns the argument unchanged.","","Is cause interrupt.","Calls <code>U::from(self)</code>.","Reads the CSR","","Is cause interrupt.","","","","","","Reads the CSR","Writes the CSR","","","","","External Interrupt ","Software Interrupt","Timer Interrupt","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","External Interrupt","External Interrupt ","","Software Interrupt","","Timer Interrupt","","Software Interrupt","Timer Interrupt","","","","","","","","","External Interrupt ","Software Interrupt","Timer Interrupt","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Reads the CSR","External Interrupt","External Interrupt ","","Software Interrupt","","Timer Interrupt","","Software Interrupt","Timer Interrupt","","","","","Reads the CSR","Writes the CSR","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Reads the CSR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Effective User XLEN.","","","Reads the CSR","Writes the CSR","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Reads the CSR","","","","","",""],"i":[0,0,0,0,1,2,3,4,1,2,3,4,0,1,2,3,4,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10,11,0,8,6,7,9,10,11,9,10,11,9,10,10,0,8,8,0,0,0,8,0,0,0,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,13,14,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,15,0,0,0,0,0,0,16,17,16,17,16,17,16,17,16,17,16,17,16,17,16,18,19,20,17,17,17,16,16,16,15,15,17,16,17,16,17,16,17,16,16,17,18,19,20,17,17,17,16,16,16,18,19,20,17,17,17,16,16,16,18,19,17,17,16,16,18,17,16,17,16,15,15,17,16,17,16,17,16,17,16,0,0,21,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,21,22,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,22,21,22,21,22,21,22,0,0,23,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,24,23,23,24,23,24,23,24,23,24,23,23,23,23,24,23,24,23,24,23,24,23,24,23,24,23,24,0,0,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,25,26,25,26,25,26,25,26,25,25,25,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,28,27,28,0,0,0,27,28,27,28,27,28,29,27,28,27,28,27,28,30,30,0,30,0,0,0,0,0,31,0,32,33,0,0,0,0,30,34,0,0,0,0,31,0,0,0,31,0,0,32,33,34,35,0,0,0,0,0,0,0,0,0,0,0,33,34,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,31,30,30,36,37,38,30,39,40,30,30,30,30,30,30,30,41,42,43,44,45,46,47,48,33,34,35,37,38,30,41,42,43,44,45,46,47,48,33,34,35,37,38,30,37,38,30,30,30,30,49,50,38,38,30,30,30,30,36,37,38,36,37,38,51,41,45,46,47,48,33,34,35,37,38,30,30,30,30,30,36,37,38,41,42,43,44,45,46,47,48,33,34,35,37,38,30,30,30,30,30,30,31,31,51,41,45,46,47,47,30,30,30,41,42,43,44,45,46,47,48,33,34,35,37,38,30,30,30,36,37,38,31,42,43,44,30,51,41,42,43,44,45,46,30,30,36,37,38,36,37,38,52,52,31,42,43,44,30,36,37,38,30,36,37,38,30,30,30,52,52,30,31,31,41,42,43,44,45,46,47,48,33,34,35,37,38,30,41,42,43,44,45,46,47,48,33,34,35,37,38,30,41,42,43,44,45,46,47,48,33,34,35,37,38,30,30,31,42,43,44,31,31,47,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0,0,55,54,54,54,55,55,55,55,55,0,54,56,56,57,54,55,56,57,54,55,0,0,56,57,54,55,57,55,56,56,57,54,55,56,56,57,54,55,56,57,54,55,57,57,57,0,0,56,57,54,55,56,57,54,55,56,57,54,55,57,0,58,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,58,58,58,58,58,0,59,59,59,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,59,59,59,60,0,0,60,60,61,61,60,61,60,61,60,61,60,61,60,61,61,60,61,61,0,61,61,61,61,60,61,60,61,60,61,61,0,0,0,0,0,62,62,62,0,0,0,62,62,62,62,62,62,0,0,62,0,62,0,62,62,62,62,62,62,62,0,63,63,63,0,0,0,0,63,63,63,63,63,0,0,63,0,63,0,63,0,63,63,63,63,63,63,63,63,63,0,64,64,64,0,0,0,0,64,64,64,64,64,0,0,64,0,64,0,64,0,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,65,0,66,66,65,66,65,0,0,0,0,0,0,0,0,66,65,66,65,66,65,66,66,66,66,65,0,0,66,0,66,0,66,0,66,66,0,66,66,0,66,0,66,0,66,66,66,66,65,66,65,66,65,66,66,66,66,66,66,66,0,0,0,0,0,0,0,0,0,0,67,67,67,0,0,0,67,67,67,67,67,0,0,67,0,67,0,67,67,67,67,67,67,67,67,0,68,68,68,68,68,68,68,0,68,68,68,69,0,70,69,69,69,69,0,70,69,69,69,69,71,71,71,0,69,69,69,69,71,71,71,0,71,69,69,71,71,71,72,72,70,71,69,72,70,71,69,72,72,70,71,69,72,70,71,69,72,70,71,69,72,70,71,71,69,69,72,70,71,69,72,72,70,0,72,70,71,69,72,70,71,69,72,70,71,69,73,74,0,0,0,0,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,75,75,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,76,0,0,0,0,0,0,76,76,76,76,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,0,77,77,77,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,0,78,78,78,0,0,0,0,79,79,79,0,0,0,0,0,0,0,0,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,79,79,79,79,79,79,79,79,79,0,0,80,80,80,81,81,80,81,80,81,80,80,81,80,81,80,81,81,80,81,0,81,80,81,80,81,80,0,0,82,83,83,0,83,0,84,0,82,82,83,0,82,84,85,84,85,0,86,82,83,84,85,86,82,83,84,85,0,0,0,86,82,83,84,85,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,86,82,83,84,85,86,86,86,0,86,0,0,86,0,86,0,86,0,0,0,0,0,86,86,86,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,86,86,0,87,0,0,87,88,88,88,87,88,87,88,87,87,88,87,88,87,88,87,0,88,88,87,88,87,88,87,0,0,89,89,89,89,89,89,89,89,0,89,89,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,90,90,90,90,91,91,91,90,91,90,91,90,90,91,90,91,91,90,91,90,91,91,0,0,91,90,91,90,91,90,0,92,0,93,92,92,92,92,92,0,93,92,92,92,0,92,92,92,92,94,94,94,0,94,92,92,94,94,94,92,92,94,94,94,95,95,93,94,92,95,93,94,92,95,95,93,94,92,95,93,94,92,93,94,92,95,93,94,94,92,92,95,93,94,92,95,95,93,0,95,93,94,92,95,93,94,92,95,93,94,92,96,97,0,0,0,98,98,98,0,0,0,0,0,0,98,98,98,98,0,0,0,0,0,0,0,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,0,99,99,99,99,99,99,99,99,99,0,0,0,0,100,100,101,101,100,101,100,0,0,0,0,101,100,100,101,100,101,100,101,101,100,101,0,101,0,0,0,101,0,101,0,101,0,0,0,101,101,101,101,101,100,101,100,101,100,101,101,101,0,0,102,102,102,102,102,102,102,102,0,102,102,102,102,0,0,0,0,0,103,103,103,103,103,103,103,0,103,103,103,0,0,0,104,104,104,0,0,0,104,104,104,104,0,0,0,0,104,104,104,104,104,104,0,105,105,105,105,105,105,105,0,105,105,105,105,105,105,0,0,0,106,106,0,106,106,106,106,0,0,0,106,106,106,106,106,0,0,107,107,107,107,107,107,107,107,0,107,107,107,107,0,108,0,108,108,0,109,109,109,108,109,108,109,108,109,108,109,108,109,109,108,109,109,0,109,109,109,109,108,109,108,109,108,109,0,110,110,110,0,110,110,110,110,110,110,110,0,110,0,110,110,110,110,110,0,0,0,111,111,111,0,0,0,111,111,111,111,111,0,111,0,111,0,111,0,111,111,111,111,111,111,111,0,112,112,112,0,0,0,112,112,112,112,112,0,112,0,112,0,112,0,112,112,112,112,112,112,112,0,0,113,113,113,0,0,114,114,113,114,113,0,0,0,0,0,0,114,113,114,113,114,113,114,114,114,113,114,0,114,114,0,114,114,0,114,0,114,0,114,0,114,0,114,114,114,114,114,114,114,114,113,114,113,114,113,114,114,114,114,0,0,0,115,115,115,115,115,115,115,115,115,115,0,115,115,115,115,115,115],"f":[null,null,null,null,[[["",0],["usize",0]],["pagetableentryx32",3]],[[["",0],["usize",0]],["pagetableentryx64",3]],[[["",0],["usize",0]],["pagetableentryx32",3]],[[["",0],["usize",0]],["pagetableentryx64",3]],[[["",0],["usize",0]],["pagetableentryx32",3]],[[["",0],["usize",0]],["pagetableentryx64",3]],[[["",0],["usize",0]],["pagetableentryx32",3]],[[["",0],["usize",0]],["pagetableentryx64",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0]]],null,[[["usize",0]]],[[["u32",0]]],[[["u64",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,null,null,[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["gpaddrsv32x4",3]],[[["",0]],["gpaddrsv39x4",3]],[[["",0]],["gpaddrsv48x4",3]],[[["",0],["gpaddrsv32x4",3]],["ordering",4]],[[["",0],["gpaddrsv39x4",3]],["ordering",4]],[[["",0],["gpaddrsv48x4",3]],["ordering",4]],[[["",0],["gpaddrsv32x4",3]],["bool",0]],[[["",0],["gpaddrsv39x4",3]],["bool",0]],[[["",0],["gpaddrsv48x4",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0],["usize",0]]],[[]],[[]],[[]],[[["",0],["gpaddrsv32x4",3]],["bool",0]],[[["",0],["gpaddrsv39x4",3]],["bool",0]],[[["",0],["gpaddrsv48x4",3]],["bool",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["u64",0]]],[[["u64",0]]],[[["u64",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["gpaddrsv32x4",3]],["option",4,[["ordering",4]]]],[[["",0],["gpaddrsv39x4",3]],["option",4,[["ordering",4]]]],[[["",0],["gpaddrsv48x4",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0],["u64",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["pagewith",3]],[[["",0]],["framewith",3]],[[["",0],["pagewith",3]],["ordering",4]],[[["",0],["framewith",3]],["ordering",4]],[[["",0],["pagewith",3]],["bool",0]],[[["",0],["framewith",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[["",0],["usize",0]],["bool",0]],[[["",0]]],[[]],[[]],[[["",0],["pagewith",3]],["bool",0]],[[["",0],["framewith",3]],["bool",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[]],[[]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["pagewith",3]],["option",4,[["ordering",4]]]],[[["",0],["framewith",3]],["option",4,[["ordering",4]]]],[[["",0],["usize",0],["bool",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["virtaddrsv32",3]],[[["",0]],["physaddrsv32",3]],[[["",0],["virtaddrsv32",3]],["ordering",4]],[[["",0],["physaddrsv32",3]],["ordering",4]],[[["",0],["virtaddrsv32",3]],["bool",0]],[[["",0],["physaddrsv32",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0],["usize",0],["usize",0]]],[[]],[[]],[[["",0],["virtaddrsv32",3]],["bool",0]],[[["",0],["physaddrsv32",3]],["bool",0]],[[["usize",0]]],[[["usize",0]]],[[["u32",0]]],[[["u64",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["virtaddrsv32",3]],["option",4,[["ordering",4]]]],[[["",0],["physaddrsv32",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["virtaddrsv39",3]],[[["",0]],["physaddrsv39",3]],[[["",0],["virtaddrsv39",3]],["ordering",4]],[[["",0],["physaddrsv39",3]],["ordering",4]],[[["",0],["virtaddrsv39",3]],["bool",0]],[[["",0],["physaddrsv39",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0],["usize",0],["usize",0],["usize",0]]],[[]],[[]],[[["",0],["virtaddrsv39",3]],["bool",0]],[[["",0],["physaddrsv39",3]],["bool",0]],[[["usize",0]]],[[["usize",0]]],[[["u64",0]]],[[["u64",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["virtaddrsv39",3]],["option",4,[["ordering",4]]]],[[["",0],["physaddrsv39",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["virtaddrsv48",3]],[[["",0]],["physaddrsv48",3]],[[["",0],["virtaddrsv48",3]],["ordering",4]],[[["",0],["physaddrsv48",3]],["ordering",4]],[[["",0],["virtaddrsv48",3]],["bool",0]],[[["",0],["physaddrsv48",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0],["usize",0],["usize",0],["usize",0],["usize",0]]],[[]],[[]],[[["",0],["virtaddrsv48",3]],["bool",0]],[[["",0],["physaddrsv48",3]],["bool",0]],[[["usize",0]]],[[["usize",0]]],[[["u64",0]]],[[["u64",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["virtaddrsv48",3]],["option",4,[["ordering",4]]]],[[["",0],["physaddrsv48",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0]],["usize",0]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[["usize",0],["usize",0]]],[[]],[[]],null,null,null,[[["",0]],["",0]],[[["",0],["criticalsection",3]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["criticalsection",3]],[[],["mutex",3]],[[["",0]],["u8",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["physicaladdress",8]],[[["",0]],["physicaladdress",8]],[[["",0]],["physicaladdress",8]],[[]],[[["",0]],["option",4,[["framewith",3]]]],[[["",0]],["option",4,[["frame",6]]]],[[]],[[["",0]]],[[["pagetableflags",3]]],[[["",0]]],[[["",0]],["usize",0]],[[]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["pagetableentryx32",3]],[[["",0]],["pagetableentryx64",3]],[[["",0]],["pagetableflags",3]],[[["",0],["pagetableflags",3]],["ordering",4]],[[]],[[["",0]],["bool",0]],[[["",0],["framewith",3]]],[[["",0],["frame",6]]],[[["",0]],["pagetableentryx64printer",3,[["physaddrsv39",3]]]],[[["",0]],["pagetableentryx64printer",3,[["physaddrsv48",3]]]],[[]],[[]],[[["",0],["pagetableflags",3]],["bool",0]],[[["",0],["intoiterator",8]]],[[["",0]],["pagetableflags",3]],[[["",0]],["pagetableflags",3]],[[["",0]],["pagetableflags",3]],[[["",0]],["pagetableflags",3]],[[["",0]],["pagetableflags",3]],[[["",0]],["pagetableflags",3]],[[]],[[]],[[]],[[]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["framewith",3,[["physicaladdress",8]]]],[[["",0]],["framewith",3,[["physicaladdress",8]]]],[[["",0]],["framewith",3,[["physicaladdress",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]],["option",4]],[[["usize",0]]],[[["usize",0]]],[[["intoiterator",8]]],[[["",0],["",0]]],[[["",0],["framewith",3],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[["",0],["framewith",3],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[]],[[]],[[]],[[]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["pagewith",3],["framewith",3],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[["",0],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[["",0],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[["",0],["pagetableflags",3]],["result",4,[["maptoerror",4]]]],[[["",0],["pagetableflags",3]],["bool",0]],[[["pagewith",3,[["virtualaddress",8]]]]],[[["pagewith",3,[["virtualaddress",8]]]]],[[["pagetablex32",6],["usize",0]]],[[["pagetablex64",6],["usize",0]]],[[["pagetablex64",6],["usize",0]]],[[["pagewith",3,[["virtualaddress",8]]]]],[[["pagewith",3,[["virtualaddress",8]]]]],[[]],[[["",0],["pagetableflags",3]],["option",4,[["ordering",4]]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0],["usize",0]],["",0]],[[["",0],["usize",0]],["",0]],[[["",0],["pagewith",3]],["result",4,[["flagupdateerror",4]]]],[[["",0]],["result",4,[["pagetableentryx32",3],["flagupdateerror",4]]]],[[["",0]],["result",4,[["pagetableentryx64",3],["flagupdateerror",4]]]],[[["",0]],["result",4,[["pagetableentryx64",3],["flagupdateerror",4]]]],[[["",0]]],[[["",0],["framewith",3,[["physicaladdress",8]]],["pagetableflags",3]]],[[["",0],["framewith",3,[["physicaladdress",8]]],["pagetableflags",3]]],[[["",0],["framewith",3,[["physicaladdress",8]]],["pagetableflags",3]]],[[["",0],["bool",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[["",0]]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["pagewith",3]],["option",4,[["framewith",3]]]],[[["",0],["pagewith",3]],["option",4,[["framewith",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[["",0],["pagewith",3]],["result",4,[["unmaperror",4]]]],[[["",0]],["result",4,[["unmaperror",4]]]],[[["",0]],["result",4,[["unmaperror",4]]]],[[["",0]],["result",4,[["unmaperror",4]]]],[[["",0],["pagewith",3],["pagetableflags",3]],["result",4,[["flagupdateerror",4]]]],[[["",0],["pagewith",3],["pagetableflags",3]],["result",4,[["flagupdateerror",4]]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u32",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["flag",4]]],[[]],[[["",0]],["fcsr",3]],[[["",0]],["flags",3]],[[["",0]],["flag",4]],[[["",0]],["roundingmode",4]],[[["",0]],["bool",0]],[[["",0],["roundingmode",4]],["bool",0]],[[["",0]],["flags",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["roundingmode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["fcsr",3]],[[["roundingmode",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["hcounteren",3]],[[["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["",0]],["bool",0]],[[],["hcounteren",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["hedeleg",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["hedeleg",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["hgatp",3]],[[["",0]],["hgatpvalues",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[]],[[]],[[["",0]],["hgatpvalues",4]],[[["",0]],["usize",0]],[[],["hgatp",3]],[[["",0],["hgatpvalues",4]]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["usize",0]],[[["",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["hideleg",3]],[[["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["hideleg",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0]],["hie",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["hie",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0]],["hip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["hip",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["hstatus",3]],[[["",0]],["vsxlvalues",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[],["hstatus",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0],["usize",0]]],[[]],[[["",0],["bool",0]]],[[["",0],["vsxlvalues",4]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["usize",0]],[[["",0]],["bool",0]],[[["",0]],["vsxlvalues",4]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["hvip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["hvip",3]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["marchid",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["option",4,[["marchid",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["trap",4]],[[["",0]],["mcause",3]],[[["",0]],["trap",4]],[[["",0]],["interrupt",4]],[[["",0]],["exception",4]],[[["",0]],["usize",0]],[[["",0],["trap",4]],["bool",0]],[[["",0],["interrupt",4]],["bool",0]],[[["",0],["exception",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[]],[[["usize",0]]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["trap",4]],["bool",0]],[[],["mcause",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["medeleg",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["medeleg",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[],["u64",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["mideleg",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["mideleg",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["mie",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["mie",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mimpid",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["option",4,[["mimpid",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["mip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["mip",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["misa",3]],[[["",0]],["mxl",4]],[[["",0],["mxl",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["char",0]],["bool",0]],[[]],[[]],[[["",0]],["mxl",4]],[[],["option",4,[["misa",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["usize",0]],[[["usize",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["mstatus",3]],[[["",0]],["xs",4]],[[["",0]],["fs",4]],[[["",0]],["mpp",4]],[[["",0]],["spp",4]],[[["",0],["xs",4]],["bool",0]],[[["",0],["fs",4]],["bool",0]],[[["",0],["mpp",4]],["bool",0]],[[["",0],["spp",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["fs",4]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["mpp",4]],[[],["mstatus",3]],[[["",0]],["bool",0]],[[["fs",4]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["mpp",4]]],[[["",0],["mpp",4]]],[[]],[[]],[[["spp",4]]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["spp",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["xs",4]],[[],["usize",0]],null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mtvec",3]],[[["",0]],["trapmode",4]],[[["",0],["trapmode",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["mtvec",3]],[[["",0]],["option",4,[["trapmode",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0],["trapmode",4]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mvendorid",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["usize",0]],[[],["option",4,[["mvendorid",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],[[],["usize",0]],[[["usize",0]]],null,null,null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["satp",3]],[[["",0]],["mode",4]],[[["",0],["mode",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["frame",6]],[[]],[[]],[[]],[[]],[[["",0]],["mode",4]],[[["",0]],["usize",0]],[[],["satp",3]],[[["mode",4],["usize",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["usize",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["trap",4]],[[["",0]],["scause",3]],[[["",0]],["trap",4]],[[["",0]],["interrupt",4]],[[["",0]],["exception",4]],[[["",0]],["usize",0]],[[["",0],["trap",4]],["bool",0]],[[["",0],["interrupt",4]],["bool",0]],[[["",0],["exception",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",0]]],[[]],[[["usize",0]]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["trap",4]],["bool",0]],[[],["scause",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["sie",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["sie",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["sip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["sip",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["usize",0]],[[["usize",0]]],null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0]],["sstatus",3]],[[["",0]],["spp",4]],[[["",0],["spp",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["fs",4]],[[]],[[]],[[["",0]],["bool",0]],[[],["sstatus",3]],[[["",0]],["bool",0]],[[["fs",4]]],[[]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["spp",4]]],[[["",0],["spp",4]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["spp",4]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["fs",4]],[[],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["stvec",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["stvec",3]],[[["",0]],["option",4,[["trapmode",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["usize",0],["trapmode",4]]],[[],["usize",0]],[[],["u64",0]],[[],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["ucause",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["ucause",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["uie",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["uie",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["uip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["uip",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["ustatus",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["ustatus",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["usize",0]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["utvec",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["utvec",3]],[[["",0]],["option",4,[["trapmode",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["usize",0],["trapmode",4]]],null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["vsatp",3]],[[["",0]],["hgatpvalues",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[]],[[]],[[["",0]],["hgatpvalues",4]],[[["",0]],["usize",0]],[[],["vsatp",3]],[[["",0],["usize",0]]],[[["",0],["hgatpvalues",4]]],[[["",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["vscause",3]],[[["",0]],["usize",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[["",0]],["bool",0]],[[]],[[],["vscause",3]],[[["",0],["usize",0]]],[[]],[[["",0],["bool",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["vsie",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["vsie",3]],[[["",0]],["bool",0]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["vsip",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[],["vsip",3]],[[["",0]],["bool",0]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]],[[],["usize",0]],[[["usize",0]]],null,null,null,null,null,[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["vsstatus",3]],[[["",0]],["uxlvalues",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["usize",0]]],[[["",0]],["usize",0]],[[]],[[]],[[["",0]],["bool",0]],[[],["vsstatus",3]],[[["",0]],["usize",0]],[[["",0],["usize",0]]],[[]],[[["",0],["bool",0]]],[[["",0],["usize",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[]],[[["",0],["bool",0]]],[[["",0],["uxlvalues",4]]],[[["",0],["usize",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0]],["uxlvalues",4]],[[["",0]]],[[["",0]],["usize",0]],[[],["usize",0]],[[["usize",0]]],null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["vstvec",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["usize",0]]],[[]],[[["",0]],["usize",0]],[[],["vstvec",3]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]]]],"p":[[6,"Entries32"],[6,"Entries64"],[6,"Entries32X4"],[6,"Entries64X4"],[8,"VirtualAddress"],[8,"AddressX32"],[8,"AddressX64"],[8,"Address"],[8,"AddressL3"],[8,"AddressL4"],[8,"AddressL2"],[3,"GPAddrSv32X4"],[3,"GPAddrSv39X4"],[3,"GPAddrSv48X4"],[8,"BitField"],[3,"FrameWith"],[3,"PageWith"],[8,"PageWithL4"],[8,"PageWithL3"],[8,"PageWithL2"],[3,"VirtAddrSv32"],[3,"PhysAddrSv32"],[3,"VirtAddrSv39"],[3,"PhysAddrSv39"],[3,"VirtAddrSv48"],[3,"PhysAddrSv48"],[3,"CriticalSection"],[3,"Mutex"],[8,"Nr"],[3,"PageTableFlags"],[8,"Mapper"],[8,"MapperExt"],[4,"MapToError"],[4,"UnmapError"],[4,"FlagUpdateError"],[8,"PTE"],[3,"PageTableEntryX32"],[3,"PageTableEntryX64"],[8,"FrameAllocatorFor"],[8,"FrameAllocator"],[3,"MapperFlush"],[3,"Rv32PageTableWith"],[3,"Rv39PageTableWith"],[3,"Rv48PageTableWith"],[3,"MapperFlushGPA"],[3,"MapperFlushGPT"],[3,"PageTableWith"],[3,"PageTableEntryX64Printer"],[8,"FrameDeallocatorFor"],[8,"FrameDeallocator"],[8,"MapperFlushable"],[8,"PTEIterableSlice"],[13,"InvalidFrameAddress"],[4,"Flag"],[4,"RoundingMode"],[3,"FCSR"],[3,"Flags"],[3,"Hcounteren"],[3,"Hedeleg"],[4,"HgatpValues"],[3,"Hgatp"],[3,"Hideleg"],[3,"Hie"],[3,"Hip"],[4,"VsxlValues"],[3,"Hstatus"],[3,"Hvip"],[3,"Marchid"],[4,"Exception"],[4,"Trap"],[4,"Interrupt"],[3,"Mcause"],[13,"Interrupt"],[13,"Exception"],[3,"Medeleg"],[3,"Mideleg"],[3,"Mie"],[3,"Mimpid"],[3,"Mip"],[4,"MXL"],[3,"Misa"],[4,"XS"],[4,"FS"],[4,"MPP"],[4,"SPP"],[3,"Mstatus"],[4,"TrapMode"],[3,"Mtvec"],[3,"Mvendorid"],[4,"Mode"],[3,"Satp"],[4,"Exception"],[4,"Trap"],[4,"Interrupt"],[3,"Scause"],[13,"Interrupt"],[13,"Exception"],[3,"Sie"],[3,"Sip"],[4,"SPP"],[3,"Sstatus"],[3,"Stvec"],[3,"Ucause"],[3,"Uie"],[3,"Uip"],[3,"Ustatus"],[3,"Utvec"],[4,"HgatpValues"],[3,"Vsatp"],[3,"Vscause"],[3,"Vsie"],[3,"Vsip"],[4,"UxlValues"],[3,"Vsstatus"],[3,"Vstvec"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,2,1,2,0,1,1,1,1,2,1,2,0,1,2,1,3,2,1,2,1,2,1,2,1],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[],["scopeguard",3,[["always",4]]]],[[]],[[]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["scopeguard",3]]],"p":[[3,"ScopeGuard"],[4,"Always"],[8,"Strategy"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["barrier","lazy","mutex","once","rw_lock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","TicketMutex","TicketMutexGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","leak","leak","leak","lock","lock","lock","new","new","new","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","INIT","Once","borrow","borrow_mut","call_once","drop","fmt","from","from","from","get","get_mut","initialized","into","is_completed","new","poll","try_from","try_into","try_into_inner","type_id","wait","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","leak","leak","leak","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_read","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","spin::rw_lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","A spin-based ticket lock providing mutually exclusive …","A guard that protects some data.","","","","","","","","","","","","","","","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","","","","","","","","Force unlock this <code>SpinMutex</code>.","Force unlock this <code>TicketMutex</code>, by serving the next ticket.","Force unlock this <code>Mutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","Consumes this <code>TicketMutex</code> and unwraps the underlying data.","Consumes this <code>Mutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","Returns <code>true</code> if the lock is currently held.","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>SpinMutex</code> and returns a guard that permits …","Locks the <code>TicketMutex</code> and returns a guard that permits …","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","Creates a new <code>TicketMutex</code> wrapping the supplied data.","Creates a new <code>Mutex</code> wrapping the supplied data.","","","","","","","","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","Try to lock this <code>TicketMutex</code>, returning a lock guard if …","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","","","Performs an initialization routine once and only once. The …","","","Returns the argument unchanged.","","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a reference to the inner value if the <code>Once</code> has …","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","Attempt to acquire this lock with shared read access.","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,1,1,2,1,2,1,2,1,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,4,5,6,7,8,9,4,5,6,7,8,9,4,6,8,5,7,9,5,7,9,5,7,4,5,5,6,7,7,8,9,9,4,6,8,4,4,4,5,6,6,6,7,8,8,8,9,4,6,8,4,5,6,7,8,9,4,6,8,4,6,8,5,7,9,4,6,8,4,6,8,4,5,6,7,8,9,4,5,6,7,8,9,4,6,8,4,5,6,7,8,9,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,11,12,13,14,11,12,13,14,11,12,13,14,13,13,14,13,12,13,14,11,12,12,13,13,14,14,11,11,11,11,11,12,13,14,11,11,12,13,14,11,12,13,14,11,11,11,11,12,13,14,11,12,13,14,11,14,11,11,11,12,13,14,14,11,11,11],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["usize",0]],["barrier",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["barrierwaitresult",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["lazy",3]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[["lazy",3]],["",0]],[[]],[[]],[[],["lazy",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["spinmutex",3]],[[],["ticketmutex",3]],[[],["mutex",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["",0]]],[[["",0]]],[[]],[[["never",0]]],[[]],[[]],[[["never",0]]],[[]],[[]],[[]],[[]],[[["never",0]]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["",0]],[[],["",0]],[[],["",0]],[[["",0]],["spinmutexguard",3]],[[["",0]],["ticketmutexguard",3]],[[["",0]],["mutexguard",3]],[[],["spinmutex",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["option",4,[["spinmutexguard",3]]]],[[["",0]],["option",4,[["ticketmutexguard",3]]]],[[["",0]],["option",4,[["mutexguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["fnonce",8]],["",0]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["never",0]]],[[]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[],["once",3]],[[]],[[["",0]],["bool",0]],[[],["once",3]],[[["",0]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[["",0]],["typeid",3]],[[["",0]],["",0]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["rwlock",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["rwlockreadguard",3]],[[],["rwlockreadguard",3]],[[],["rwlockupgradableguard",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[["",0]]],[[]],[[["never",0]]],[[]],[[]],[[]],[[]],[[["",0]],["",0]],[[]],[[]],[[]],[[]],[[]],[[],["",0]],[[],["",0]],[[],["",0]],[[],["rwlock",3]],[[["",0]],["rwlockreadguard",3]],[[["",0]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["option",4,[["rwlockreadguard",3]]]],[[],["result",4,[["rwlockwriteguard",3]]]],[[["",0]],["option",4,[["rwlockupgradableguard",3]]]],[[["",0]],["option",4,[["rwlockwriteguard",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["rwlockwriteguard",3]],[[["",0]],["rwlockupgradableguard",3]],[[["",0]],["rwlockwriteguard",3]],[[["",0]],["usize",0]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Lazy"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"TicketMutex"],[3,"TicketMutexGuard"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"]]},\
"virtio_drivers":{"doc":"VirtIO guest drivers.","t":[13,13,3,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,6,13,13,13,13,13,13,13,3,3,3,3,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11],"n":["AbsInfo","AlreadyUsed","BlkResp","Block","BufferTooSmall","Console","Crypto","DeviceType","DmaError","EntropySource","Error","EvBits","GPU","IOMMU","IdDevids","IdName","IdSerial","Input","InputConfigSelect","InputEvent","Invalid","InvalidParam","IoErr","IoError","IoMemory","Mac80211","Memory","MemoryBalloon","MemoryBallooning","Network","NotReady","Ok","PropBits","Pstore","RespStatus","Result","Rpmsg","RprocSerial","ScsiHost","SignalDistributionModule","Socket","Timer","Unsupported","VirtIOBlk","VirtIOConsole","VirtIOGpu","VirtIOHeader","VirtIOInput","VirtIONet","VirtioCAIF","_9P","_NotReady","ack_interrupt","ack_interrupt","ack_interrupt","ack_interrupt","ack_interrupt","ack_interrupt","begin_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone","clone","clone_into","clone_into","clone_into","code","config_space","default","default","device_type","eq","eq","eq","event_type","finish_init","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","mac","max_queue_size","move_cursor","new","new","new","new","new","notify","pop_pending_event","pop_used","query_config_select","queue_physical_page_number","queue_set","queue_used","read_block","read_block_nb","recv","recv","resolution","send","send","setup_cursor","setup_framebuffer","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vendor_id","verify","virt_queue_size","write_block","write_block_nb"],"q":["virtio_driversd":["subsel specifies the absolute axis using ABS_* constants …","The queue is already in use.","Response of a VirtIOBlk request.","","The buffer is too small.","","","Types of virtio devices.","Failed to alloc DMA memory.","","The error type of VirtIO drivers.","subsel specifies the event type using EV_* constants in …","","","Returns ID information of the device, in u.ids. subsel is …","Returns the name of the device, in u.string. subsel is …","Returns the serial number of the device, in u.string. …","","Select value used for <code>VirtIOInput::query_config_select()</code>.","Both queues use the same <code>virtio_input_event</code> struct. <code>type</code>, …","","Invalid parameter.","IoErr.","I/O Error","","","","","","","The device is not ready.","Ok.","Returns input properties of the device, in u.bitmap. …","","Status of a VirtIOBlk request.","The type returned by driver methods.","","","","","","","Unsupported yet.","The virtio block device is a simple virtual block device …","Virtio console. Only one single port is allowed since ``…","A virtio based graphics adapter.","MMIO Device Legacy Register Interface.","Virtual human interface devices such as keyboards, mice …","The virtio network device is a virtual ethernet card.","","","Not ready.","Acknowledge interrupt.","Acknowledge interrupt.","Acknowledge interrupt.","Acknowledge interrupt and return true if success.","Acknowledge interrupt and process events.","Acknowledge interrupt.","Begin initializing the device.","","","","","","","","","","","","","","","","","","","","","","","","","Whether can receive packet.","Whether can send packet.","","","","","","","Event code.","Get the pointer to config space (at offset 0x100)","","","Get the device type.","","","","Event type.","Finish initializing the device.","Flush framebuffer to screen.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get MAC address.","Get the max size of queue.","Move the pointer without updating the shape.","Create a new VirtIO-Blk driver.","Create a new VirtIO-Console driver.","Create a new VirtIO-Gpu driver.","Create a new VirtIO-Input driver.","Create a new VirtIO-Net driver.","Notify device.","Pop the pending event.","During an interrupt, it fetches a token of a completed …","Query a specific piece of information by <code>select</code> and <code>subsel</code>…","Get guest physical page number of the virtual queue.","Set queue.","Whether the queue is in used.","Read a block.","Read a block in a non-blocking way which means that it …","Try get char.","Receive a packet.","Get the resolution (width, height).","Put a char onto the device.","Send a packet.","Set the pointer shape and position.","Setup framebuffer","Return the status of a VirtIOBlk request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event value.","Get the vendor ID.","Verify a valid header.","Return size of its VirtQueue. It can be used to tell the …","Write a block.","Arguments"],"i":[1,2,0,3,2,3,3,0,2,3,0,1,3,3,1,1,1,3,0,0,3,2,4,2,3,3,3,3,3,3,2,4,1,3,0,0,3,3,3,3,3,3,4,0,0,0,0,0,0,3,3,4,5,6,7,8,9,10,8,5,6,7,8,9,10,11,4,3,1,12,2,5,6,7,8,9,10,11,4,3,1,12,2,10,10,4,1,12,4,1,12,12,8,11,12,8,4,3,2,12,8,7,11,4,3,1,12,2,5,6,7,8,9,10,11,4,3,1,12,2,5,6,7,8,9,10,11,4,3,1,12,2,10,8,7,5,6,7,9,10,8,9,5,9,8,8,8,5,5,6,10,7,6,10,7,7,11,4,1,12,5,6,7,8,9,10,11,4,3,1,12,2,5,6,7,8,9,10,11,4,3,1,12,2,5,6,7,8,9,10,11,4,3,1,12,2,12,8,8,5,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["result",6,[["bool",0]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["respstatus",4]],[[["",0]],["inputconfigselect",4]],[[["",0]],["inputevent",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0]]],[[]],[[],["inputevent",3]],[[["",0]],["devicetype",4]],[[["",0],["respstatus",4]],["bool",0]],[[["",0],["devicetype",4]],["bool",0]],[[["",0],["error",4]],["bool",0]],null,[[["",0]]],[[["",0]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["u32",0]],[[["",0],["u32",0],["u32",0]],["result",6]],[[["virtioheader",3]],["result",6]],[[["virtioheader",3]],["result",6]],[[["virtioheader",3]],["result",6]],[[["virtioheader",3]],["result",6]],[[["virtioheader",3]],["result",6]],[[["",0],["u32",0]]],[[["",0]],["option",4,[["inputevent",3]]]],[[["",0]],["result",6,[["u16",0]]]],[[["",0],["inputconfigselect",4],["u8",0]],["u8",0]],[[["",0],["u32",0]],["u32",0]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]]],[[["",0],["u32",0]],["bool",0]],[[["",0],["usize",0]],["result",6]],[[["",0],["usize",0],["blkresp",3]],["result",6,[["u16",0]]]],[[["",0],["bool",0]],["result",6,[["option",4,[["u8",0]]]]]],[[["",0]],["result",6,[["usize",0]]]],[[["",0]]],[[["",0],["u8",0]],["result",6]],[[["",0]],["result",6]],[[["",0],["u32",0],["u32",0],["u32",0],["u32",0]],["result",6]],[[["",0]],["result",6]],[[["",0]],["respstatus",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["u32",0]],[[["",0]],["bool",0]],[[["",0]],["u16",0]],[[["",0],["usize",0]],["result",6]],[[["",0],["usize",0],["blkresp",3]],["result",6,[["u16",0]]]]],"p":[[4,"InputConfigSelect"],[4,"Error"],[4,"DeviceType"],[4,"RespStatus"],[3,"VirtIOBlk"],[3,"VirtIOConsole"],[3,"VirtIOGpu"],[3,"VirtIOHeader"],[3,"VirtIOInput"],[3,"VirtIONet"],[3,"BlkResp"],[3,"InputEvent"]]},\
"volatile":{"doc":"Provides wrapper types <code>Volatile</code>, <code>ReadOnly</code>, <code>WriteOnly</code>, …","t":[3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ReadOnly","ReadWrite","Volatile","WriteOnly","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","default","default","default","fmt","fmt","from","from","from","into","into","into","new","new","new","read","read","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","write","write"],"q":["volatile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A volatile wrapper which only allows read operations.","A volatile wrapper which allows both read and write …","A wrapper type around a volatile variable, which allows …","A volatile wrapper which only allows write operations.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new volatile instance wrapping the given value.","Construct a new read-only volatile wrapper wrapping the …","Constructs a new write only volatile wrapper around the …","Performs a volatile read of the contained value, returning …","Perform a volatile read of the contained value, returning …","","","","","","","","","","Performs a volatile read of the contained value, passes a …","Performs a volatile write, setting the contained value to …","Performs a volatile write of value <code>value</code> into the …"],"i":[0,0,0,0,1,2,3,1,2,3,1,2,1,2,3,1,2,1,2,3,1,2,3,1,2,3,1,2,1,2,3,1,2,3,1,2,3,1,1,3],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["readonly",3]],[[],["volatile",3]],[[],["readonly",3]],[[],["writeonly",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["volatile",3]],[[],["readonly",3]],[[],["writeonly",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],[[["",0]]]],"p":[[3,"Volatile"],[3,"ReadOnly"],[3,"WriteOnly"]]},\
"xmas_elf":{"doc":"","t":[3,8,6,6,11,11,0,11,11,11,11,10,11,10,11,11,11,0,0,12,12,11,11,0,11,11,11,11,0,0,11,11,11,13,13,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,5,11,11,11,11,11,12,13,13,13,13,13,4,3,13,13,4,3,13,13,3,13,13,3,4,3,13,13,13,13,13,17,4,3,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,5,11,12,11,12,11,12,12,12,5,11,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,17,17,17,17,17,3,13,13,13,13,13,13,13,13,13,13,13,4,3,3,3,4,13,17,17,17,17,17,13,4,3,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,12,5,11,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,3,3,4,3,13,13,13,13,13,13,13,13,13,13,17,17,17,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,3,13,13,13,3,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,3,3,3,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,13,13,3,3,8,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,12,12],"n":["ElfFile","Extensions","P32","P64","borrow","borrow_mut","dynamic","find_section_by_name","fmt","from","get_dyn_string","get_gnu_buildid","get_gnu_buildid","get_gnu_debuglink","get_gnu_debuglink","get_shstr","get_string","hash","header","header","input","into","new","program","program_header","program_iter","section_header","section_iter","sections","symbol_table","try_from","try_into","type_id","BindNow","Debug","Dynamic","FLAG_1_CONFALT","FLAG_1_DIRECT","FLAG_1_DISPRELDNE","FLAG_1_DISPRELPND","FLAG_1_EDITED","FLAG_1_ENDFILTEE","FLAG_1_GLOBAL","FLAG_1_GLOBAUDIT","FLAG_1_GROUP","FLAG_1_IGNMULDEF","FLAG_1_INITFIRST","FLAG_1_INTERPOSE","FLAG_1_LOADFLTR","FLAG_1_NODEFLIB","FLAG_1_NODELETE","FLAG_1_NODIRECT","FLAG_1_NODUMP","FLAG_1_NOHDR","FLAG_1_NOKSYMS","FLAG_1_NOOPEN","FLAG_1_NORELOC","FLAG_1_NOW","FLAG_1_ORIGIN","FLAG_1_PIE","FLAG_1_SINGLETON","FLAG_1_STUB","FLAG_1_SYMINTPOSE","FLAG_1_TRANS","Fini","FiniArray","FiniArraySize","Flags","Flags1","Hash","Init","InitArray","InitArraySize","JmpRel","Needed","Null","OsSpecific","PltRel","PltRelSize","Pltgot","PreInitArray","PreInitArraySize","ProcessorSpecific","RPath","Rel","RelEnt","RelSize","Rela","RelaEnt","RelaSize","RunPath","SoName","StrSize","StrTab","SymEnt","SymTab","SymTabShIndex","Symbolic","Tag","Tag_","TextRel","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","get_ptr","get_ptr","get_tag","get_tag","get_val","get_val","into","into","into","ne","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","HashTable","borrow","borrow_mut","clone","fmt","from","get_bucket","get_chain","hash","into","lookup","try_from","try_into","type_id","0","AArch64","Aix","Arm","BPF","BigEndian","Class","Class_","Core","Current","Data","Data_","Executable","FreeBSD","Header","Header32","Header64","HeaderPt1","HeaderPt2","HeaderPt2_","HpUx","Ia64","Irix","Linux","LittleEndian","MAGIC","Machine","Machine_","Mips","NetBSD","None","None","None","None","None","OpenBSD","OpenVMS","OsAbi","OsAbi_","Other","Other","Other","Other","Other","PowerPC","ProcessorSpecific","Relocatable","SharedObject","SixtyFour","Solaris","Sparc","SuperH","SystemV","ThirtyTwo","Type","Type_","Version","Version_","X86","X86_64","abi_version","as_class","as_data","as_machine","as_os_abi","as_type","as_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","data","data","entry_point","entry_point","eq","eq","eq","eq","eq","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header_size","header_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_none","is_none","is_none","is_none","is_none","is_none","machine","machine","magic","ne","ne","ne","ne","ne","ne","ne","os_abi","os_abi","padding","parse_header","ph_count","ph_count","ph_entry_size","ph_entry_size","ph_offset","ph_offset","pt1","pt2","sanity_check","sh_count","sh_count","sh_entry_size","sh_entry_size","sh_offset","sh_offset","sh_str_index","sh_str_index","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","0","0","0","0","0","0","0","0","0","Dynamic","Dynamic32","Dynamic64","Empty","FLAG_MASKOS","FLAG_MASKPROC","FLAG_R","FLAG_W","FLAG_X","Flags","GnuRelro","Interp","Load","Note","Note64","Null","OsSpecific","Ph32","Ph64","Phdr","ProcessorSpecific","ProgramHeader","ProgramHeader32","ProgramHeader64","ProgramIter","SegmentData","ShLib","TYPE_GNU_RELRO","TYPE_HIOS","TYPE_HIPROC","TYPE_LOOS","TYPE_LOPROC","Tls","Type","Type_","Undefined","align","align","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","default","default","default","default","eq","eq","file","file_size","file_size","file_size","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_data","get_data","get_data","get_type","get_type","get_type","into","into","into","into","into","into","into","into","into_iter","is_execute","is_read","is_write","mem_size","mem_size","mem_size","ne","ne","next","next_index","offset","offset","offset","parse_program_header","physical_addr","physical_addr","physical_addr","raw_data","raw_data","sanity_check","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","virtual_addr","virtual_addr","virtual_addr","0","0","0","0","0","0","1","0","0","COMPRESS_HIOS","COMPRESS_HIPROC","COMPRESS_LOOS","COMPRESS_LOPROC","CompressionHeader32","CompressionHeader64","CompressionType","CompressionType_","DynSym","DynSymbolTable32","DynSymbolTable64","Dynamic","Dynamic32","Dynamic64","Empty","FiniArray","FnArray32","FnArray64","GRP_COMDAT","GRP_MASKOS","GRP_MASKPROC","Group","Group","Hash","HashTable","InitArray","NoBits","Note","Note64","NoteHeader","Null","OsSpecific","OsSpecific","PreInitArray","ProcessorSpecific","ProcessorSpecific","ProgBits","Rel","Rel","Rel32","Rel64","Rela","Rela","Rela32","Rela64","SHF_ALLOC","SHF_COMPRESSED","SHF_EXECINSTR","SHF_GROUP","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_MASKOS","SHF_MASKPROC","SHF_MERGE","SHF_OS_NONCONFORMING","SHF_STRINGS","SHF_TLS","SHF_WRITE","SHN_ABS","SHN_COMMON","SHN_HIOS","SHN_HIPROC","SHN_HIRESERVE","SHN_LOOS","SHN_LOPROC","SHN_LORESERVE","SHN_UNDEF","SHN_XINDEX","SHT_HIOS","SHT_HIPROC","SHT_HIUSER","SHT_LOOS","SHT_LOPROC","SHT_LOUSER","SectionData","SectionHeader","SectionHeader_","SectionIter","SectionStrings","Sh32","Sh64","ShLib","ShType","ShType_","StrArray","StrTab","SymTab","SymTabShIndex","SymTabShIndex","SymbolTable32","SymbolTable64","Undefined","User","Zlib","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","desc","eq","eq","file","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_addend","get_addend","get_data","get_name","get_offset","get_offset","get_offset","get_offset","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_symbol_table_index","get_type","get_type","get_type","get_type","get_type","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","link","name","name","ne","ne","next","next","next_index","offset","parse_section_header","raw_data","sanity_check","size","strings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","flags","indicies","0","0","0","0","0","Binding","Binding_","Common","Default","DynEntry32","DynEntry64","Entry","Entry32","Entry64","File","Func","Global","Hidden","Internal","Local","NoType","Object","OsSpecific","OsSpecific","ProcessorSpecific","ProcessorSpecific","Protected","Section","Tls","Type","Type_","Visibility","Visibility_","Weak","as_binding","as_type","as_visibility","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_binding","get_name","get_name","get_name","get_name","get_name","get_other","get_section_header","get_type","info","info","info","info","info","into","into","into","into","into","into","into","into","into","into","name","name","name","name","name","ne","ne","other","other","other","other","other","shndx","shndx","shndx","shndx","shndx","size","size","size","size","size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","0","0","0","0"],"q":["xmas_elf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::dynamic::Tag","","xmas_elf::hash","","","","","","","","","","","","","","xmas_elf::header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::header::Class","xmas_elf::header::Data","xmas_elf::header::HeaderPt2","","xmas_elf::header::Machine","xmas_elf::header::OsAbi","xmas_elf::header::Type","xmas_elf::header::Version","xmas_elf::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::program::ProgramHeader","","xmas_elf::program::SegmentData","","","","","xmas_elf::program::Type","","xmas_elf::sectionsxmas_elf::sections::CompressionType","","xmas_elf::sections::SectionData","","","","","","","","","","","","","","","","","","","","xmas_elf::sections::SectionHeader","","xmas_elf::sections::ShType","","","xmas_elf::symbol_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xmas_elf::symbol_table::Binding","","xmas_elf::symbol_table::Type",""],"d":["","A trait for things that are common ELF conventions but not …","","","","","","","","Returns the argument unchanged.","","Parse and return the value of the .note.gnu.build-id …","","Parse and return the value of the .gnu_debuglink section, …","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,1,1,1,1,2,1,2,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,1,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,4,5,3,4,5,3,5,3,4,5,5,3,4,5,3,4,4,4,4,4,4,4,5,3,3,4,5,3,4,5,3,4,5,3,6,7,0,8,8,8,8,8,8,8,0,8,8,8,8,8,9,10,11,10,10,12,0,0,13,14,0,0,13,11,0,15,15,0,0,0,11,10,11,11,12,0,0,0,10,11,16,12,14,13,10,11,11,0,0,16,12,14,11,10,10,13,13,13,16,11,10,10,11,16,0,0,0,0,10,10,17,18,19,20,21,9,22,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,17,17,23,17,15,18,16,19,12,22,14,21,11,9,13,20,10,17,17,15,24,18,16,12,14,11,13,10,24,23,23,17,15,15,24,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,15,24,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,18,16,19,12,22,14,15,24,17,18,16,12,14,11,13,10,17,17,17,0,15,24,15,24,15,24,23,23,0,15,24,15,24,15,24,15,24,15,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,15,24,23,17,15,24,18,16,19,12,22,14,21,11,9,13,20,10,17,15,17,24,25,26,27,28,29,30,31,32,33,34,35,35,35,0,0,0,0,0,0,34,34,34,34,35,34,34,36,36,34,34,0,0,0,0,0,34,0,0,0,0,0,34,0,0,35,36,37,38,39,36,37,38,33,40,34,35,39,36,37,38,33,40,34,35,36,37,38,33,40,34,37,38,33,40,33,34,39,36,37,38,36,37,38,39,36,36,37,37,38,38,33,33,33,40,34,35,39,36,37,38,33,40,34,35,36,37,38,36,37,38,39,36,37,38,33,40,34,35,39,33,33,33,36,37,38,33,34,39,39,36,37,38,0,36,37,38,37,38,0,39,36,37,38,33,40,34,35,39,36,37,38,33,40,34,35,37,38,39,36,37,38,33,40,34,35,36,37,38,41,42,43,44,45,46,46,47,48,0,0,0,0,0,0,0,0,49,50,50,49,50,50,50,49,50,50,0,0,0,49,50,49,50,49,49,49,50,0,49,49,51,49,49,51,49,0,49,50,50,0,49,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,49,0,0,50,49,49,49,50,50,50,50,49,51,52,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,52,55,49,57,58,59,51,62,62,49,51,53,52,53,52,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,60,60,52,52,60,60,61,61,60,60,61,61,52,60,60,61,61,52,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,56,52,52,62,49,51,53,56,53,52,0,52,0,52,50,53,52,54,55,49,50,56,57,58,59,51,60,61,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,52,62,53,52,54,55,49,50,56,57,58,59,51,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,74,82,82,83,84,85,86,87,0,0,88,89,0,0,0,0,0,88,88,90,89,89,90,88,88,90,88,90,88,89,88,88,0,0,0,0,90,91,92,93,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,93,89,91,90,92,88,90,88,98,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,98,98,94,95,96,97,98,98,98,98,94,95,96,97,94,95,96,97,93,89,91,90,92,88,98,94,95,96,97,90,88,98,94,95,96,97,98,94,95,96,97,98,94,95,96,97,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,94,95,96,97,93,89,91,90,92,88,98,94,95,96,97,99,100,101,102],"f":[null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["str",0]],["option",4,[["sectionheader",4]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["u32",0]],["result",4,[["str",0],["str",0]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["u32",0]],["result",4,[["str",0],["str",0]]]],[[["",0],["u32",0]],["result",4,[["str",0],["str",0]]]],null,null,null,null,[[]],[[],["result",4,[["elffile",3],["str",0]]]],null,[[["",0],["u16",0]],["result",4,[["programheader",4],["str",0]]]],[[["",0]],["programiter",3]],[[["",0],["u16",0]],["result",4,[["sectionheader",4],["str",0]]]],[[["",0]],["sectioniter",3]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tag_",3]],[[["",0],["tag",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["result",4,[["p64",6],["str",0]]]],[[["",0]],["result",4,[["p32",6],["str",0]]]],[[["",0]],["result",4,[["tag",4,[["p64",6]]],["str",0]]]],[[["",0]],["result",4,[["tag",4,[["p32",6]]],["str",0]]]],[[["",0]],["result",4,[["p64",6],["str",0]]]],[[["",0]],["result",4,[["p32",6],["str",0]]]],[[]],[[]],[[]],[[["",0],["tag",4]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["hashtable",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["u32",0]],["u32",0]],[[["",0],["u32",0]],["u32",0]],[[["str",0]],["u32",0]],[[]],[[["",0],["str",0]],["entry",8]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["class",4]],[[],["data",4]],[[],["machine",4]],[[],["osabi",4]],[[],["type",4]],[[],["versionclass",4]],null,[[["",0]],["header",3]],[[["",0]],["headerpt1",3]],[[["",0]],["headerpt2",4]],[[["",0]],["class_",3]],[[["",0]],["class",4]],[[["",0]],["data_",3]],[[["",0]],["data",4]],[[["",0]],["version_",3]],[[["",0]],["version",4]],[[["",0]],["osabi_",3]],[[["",0]],["osabi",4]],[[["",0]],["type_",3]],[[["",0]],["type",4]],[[["",0]],["machine_",3]],[[["",0]],["machine",4]],[[["",0]],["data",4]],null,[[["",0]],["u64",0]],null,[[["",0],["class_",3]],["bool",0]],[[["",0],["class",4]],["bool",0]],[[["",0],["data",4]],["bool",0]],[[["",0],["version",4]],["bool",0]],[[["",0],["osabi",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["machine",4]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u16",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["machine_",3]],null,null,[[["",0],["class_",3]],["bool",0]],[[["",0],["class",4]],["bool",0]],[[["",0],["data",4]],["bool",0]],[[["",0],["version",4]],["bool",0]],[[["",0],["osabi",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["machine",4]],["bool",0]],[[["",0]],["osabi",4]],null,null,[[],["result",4,[["header",3],["str",0]]]],[[["",0]],["u16",0]],null,[[["",0]],["u16",0]],null,[[["",0]],["u64",0]],null,null,null,[[["elffile",3]],["result",4,[["str",0]]]],[[["",0]],["u16",0]],null,[[["",0]],["u16",0]],null,[[["",0]],["u64",0]],null,[[["",0]],["u16",0]],null,[[["",0]],["usize",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["type_",3]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["version",4]],[[["",0]],["u32",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["u64",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["programheader",4]],[[["",0]],["programheader32",3]],[[["",0]],["programheader64",3]],[[["",0]],["flags",3]],[[["",0]],["type_",3]],[[["",0]],["type",4]],[[],["programheader32",3]],[[],["programheader64",3]],[[],["flags",3]],[[],["type_",3]],[[["",0],["flags",3]],["bool",0]],[[["",0],["type",4]],["bool",0]],null,[[["",0]],["u64",0]],null,null,[[["",0]],["flags",3]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["elffile",3]],["result",4,[["segmentdata",4],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["segmentdata",4],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["segmentdata",4],["str",0]]]],[[["",0]],["result",4,[["type",4],["str",0]]]],[[["",0]],["result",4,[["type",4],["str",0]]]],[[["",0]],["result",4,[["type",4],["str",0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["u64",0]],null,null,[[["",0],["flags",3]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0]],["option",4]],null,[[["",0]],["u64",0]],null,null,[[["header",3],["u16",0]],["result",4,[["programheader",4],["str",0]]]],[[["",0]],["u64",0]],null,null,[[["",0],["elffile",3]]],[[["",0],["elffile",3]]],[[["programheader",4],["elffile",3]],["result",4,[["str",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u64",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["usectionheader",4]],[[["",0]],["shtype_",3]],[[["",0]],["shtype",4]],[[["",0]],["compressionheader64",3]],[[["",0]],["compressionheader32",3]],[[["",0]],["compressiontype_",3]],[[["",0]],["compressiontype",4]],[[["",0]],["noteheader",3]],[[["",0]]],[[["",0],["shtype",4]],["bool",0]],[[["",0],["compressiontype",4]],["bool",0]],null,[[["",0]],["u64",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u64",0]],[[["",0]],["u32",0]],[[["",0],["elffile",3]],["result",4,[["sectiondata",4],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0]],["u64",0]],[[["",0]],["u32",0]],[[["",0]],["u64",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["result",4,[["shtype",4],["str",0]]]],[[["",0]],["u8",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u8",0]],[[["",0]],["u32",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["str",0]],[[["",0],["shtype",4]],["bool",0]],[[["",0],["compressiontype",4]],["bool",0]],[[["",0]],["option",4]],[[["",0]],["option",4,[["str",0]]]],null,[[["",0]],["u64",0]],[[["header",3],["u16",0]],["result",4,[["sectionheader",4],["str",0]]]],[[["",0],["elffile",3]]],[[["sectionheader",4],["elffile",3]],["result",4,[["str",0]]]],[[["",0]],["u64",0]],[[["",0]],["result",4,[["sectionstrings",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["shtype_",3]],[[["",0]],["u32",0]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["binding",4],["str",0]]]],[[],["result",4,[["type",4],["str",0]]]],[[],["visibility",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["visibility_",3]],[[["",0]],["visibility",4]],[[["",0]],["binding_",3]],[[["",0]],["binding",4]],[[["",0]],["type_",3]],[[["",0]],["type",4]],[[["",0],["binding",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["result",4,[["binding",4],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0],["elffile",3]],["result",4,[["str",0],["str",0]]]],[[["",0]],["visibility",4]],[[["",0],["elffile",3],["usize",0]],["result",4,[["sectionheader",4],["str",0]]]],[[["",0]],["result",4,[["type",4],["str",0]]]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[["",0]],["u8",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0],["binding",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0]],["visibility_",3]],[[["",0]],["visibility_",3]],[[["",0]],["visibility_",3]],[[["",0]],["visibility_",3]],[[["",0]],["visibility_",3]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u16",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],[[["",0]],["u64",0]],null,null,null,null],"p":[[3,"ElfFile"],[8,"Extensions"],[4,"Tag"],[3,"Dynamic"],[3,"Tag_"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[3,"HashTable"],[3,"Type_"],[4,"Machine"],[4,"OsAbi"],[4,"Data"],[4,"Type"],[4,"Version"],[4,"HeaderPt2"],[4,"Class"],[3,"HeaderPt1"],[3,"Class_"],[3,"Data_"],[3,"Machine_"],[3,"OsAbi_"],[3,"Version_"],[3,"Header"],[3,"HeaderPt2_"],[13,"Other"],[13,"Other"],[13,"Header32"],[13,"Header64"],[13,"Other"],[13,"Other"],[13,"ProcessorSpecific"],[13,"Other"],[3,"Flags"],[4,"Type"],[4,"SegmentData"],[4,"ProgramHeader"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"ProgramIter"],[3,"Type_"],[13,"Ph32"],[13,"Ph64"],[13,"Undefined"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"Note64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[4,"ShType"],[4,"SectionData"],[4,"CompressionType"],[4,"SectionHeader"],[3,"SectionIter"],[3,"SectionHeader_"],[3,"ShType_"],[3,"SectionStrings"],[3,"CompressionHeader64"],[3,"CompressionHeader32"],[3,"CompressionType_"],[3,"Rela"],[3,"Rel"],[3,"NoteHeader"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"Undefined"],[13,"StrArray"],[13,"FnArray32"],[13,"FnArray64"],[13,"SymbolTable32"],[13,"SymbolTable64"],[13,"DynSymbolTable32"],[13,"DynSymbolTable64"],[13,"SymTabShIndex"],[13,"Note64"],[13,"Rela32"],[13,"Rela64"],[13,"Rel32"],[13,"Rel64"],[13,"Dynamic32"],[13,"Dynamic64"],[13,"HashTable"],[13,"Group"],[13,"Sh32"],[13,"Sh64"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"User"],[4,"Type"],[4,"Visibility"],[4,"Binding"],[3,"Binding_"],[3,"Type_"],[3,"Visibility_"],[3,"Entry32"],[3,"Entry64"],[3,"DynEntry32"],[3,"DynEntry64"],[8,"Entry"],[13,"OsSpecific"],[13,"ProcessorSpecific"],[13,"OsSpecific"],[13,"ProcessorSpecific"]]},\
"zero":{"doc":"Functions for reading binary data into Rust data …","t":[8,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11],"n":["Pod","StrReaderIterator","borrow","borrow_mut","clone","fmt","from","into","into_iter","next","read","read_array","read_array_unsafe","read_str","read_str_unsafe","read_strs_to_null","read_unsafe","size_hint","try_from","try_into","type_id"],"q":["zero","","","","","","","","","","","","","","","","","","","",""],"d":["Implementing this trait means that the concrete type is …","Iterates over <code>self.data</code>, yielding strings (null-terminated …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Reads a single <code>T</code> from <code>input</code>.","Read an array of <code>T</code>s from input.","Reads an array of <code>T</code>s from <code>input</code> with no checks.","Read a string from <code>input</code>. The string must be a …","Reads a null-terminated string from <code>input</code> with no checks.","Returns an iterator which will return a sequence of …","Reads a <code>T</code> from <code>input</code> with no checks.","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["strreaderiterator",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]],["option",4,[["str",0]]]],[[],["",0]],[[]],[[]],[[],["str",0]],[[],["str",0]],[[],["strreaderiterator",3]],[[],["",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"StrReaderIterator"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};